<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>meow0v0</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://meow0v0.github.io/"/>
  <updated>2018-04-13T12:55:54.383Z</updated>
  <id>http://meow0v0.github.io/</id>
  
  <author>
    <name>meow0v0</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>建立简单的Thrift Client&amp;Server</title>
    <link href="http://meow0v0.github.io/2018/04/13/%E5%BB%BA%E7%AB%8B%E7%AE%80%E5%8D%95%E7%9A%84Thrift-Client-Server/"/>
    <id>http://meow0v0.github.io/2018/04/13/建立简单的Thrift-Client-Server/</id>
    <published>2018-04-13T12:54:18.000Z</published>
    <updated>2018-04-13T12:55:54.383Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Thrift 是 IDL 描述性语言的一个具体实现，最初是由 Facebook 开发用做系统内各语言之间的 RPC 通信的一个可扩展且跨语言的软件框架。</p></blockquote><a id="more"></a><blockquote><ul><li>&lt;弱&gt;<br>Thrift 适用于程序对程序静态的数据交换，需要先确定好数据结构。但由于Thrift是完全静态化的，当数据结构发生变化时，必须重新编辑IDL文件、代码生成再编译载入的流程。</li><li>&lt;优&gt;<br>Thrift 适用于搭建大型数据交换及存储的通用工具，在大型系统中的内部数据传输上相对于 JSON 和 XML 无论在性能、传输大小上有明显的优势。</li></ul></blockquote><h2 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h2><table><thead><tr><th>基本</th><th>jar包（maven导入）</th></tr></thead><tbody><tr><td>Windows 10</td><td>libthrift-0.10.0.jar</td></tr><tr><td>jdk 1.7.0_45</td><td>slf4j-api-1.7.12.jar</td></tr><tr><td>thrift 0.10.0</td><td>httpclient-4.4.1.jar</td></tr><tr><td>maven 3.5.3</td><td>httpcore-4.4.1.jar</td></tr><tr><td></td><td>commons-logging-1.2.jar</td></tr><tr><td>时间：</td><td>commons-codec-1.9.jar</td></tr><tr><td>2018/4/13</td><td>slf4j-simple-1.7.25.jar</td></tr></tbody></table><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="Thrift"><a href="#Thrift" class="headerlink" title="Thrift"></a>Thrift</h3><p>略 =-= 不懒了再加吧</p><h3 id="maven"><a href="#maven" class="headerlink" title="maven"></a>maven</h3><p>略 =-= 不懒了再加吧</p><h2 id="工程"><a href="#工程" class="headerlink" title="工程"></a>工程</h2><h3 id="建立maven工程文件"><a href="#建立maven工程文件" class="headerlink" title="建立maven工程文件"></a>建立maven工程文件</h3><h4 id="new-Maven-Project"><a href="#new-Maven-Project" class="headerlink" title="new Maven Project"></a>new Maven Project</h4><ul><li>New Project</li><li>Maven -&gt; Maven Project [Next]</li><li>Use default Workspace location [Next]</li><li>Filter: (选择默认的) [Next]<ul><li>(Group Id) org.apache.maven.archetypse</li><li>(Artifact Id) maven-archetype-quickstart </li><li>(Version) 1.1</li></ul></li><li>修改工程配置 [Finish]<ul><li>(Group Id) com</li><li>(Artifact Id) thrift</li><li>(Version) 0.0.1-SNAPSHOT</li><li>(Package) com.thrift</li></ul></li></ul><p>做以上修改即可生成项目名为thrift，自带java包名为com.thrift的项目</p><p>test及src文件夹中所有文件可能会报错，若只是简单尝试C/S通信，可以将包中文件删除，但包及文件夹不能删除（maven工程会根据路径检查文件）</p><h4 id="修改POM-xml配置文件"><a href="#修改POM-xml配置文件" class="headerlink" title="修改POM.xml配置文件"></a>修改POM.xml配置文件</h4><ul><li>一般生成的<code>pom.xml</code>文件内容无误，仅需做如下修改即可<ul><li>\<packaging>标签内内容，推荐使用<code>jar</code>，仅在简化合一时使用<code>pom</code></packaging></li><li>添加libthrift的依赖\<dependency>，<strong><u>版本号与安装的thrift版本号一致</u></strong>（很重要！！）</dependency></li><li>添加slf4j-simple，即日志输出所需的jar包</li></ul></li></ul><h5 id="pom-xml"><a href="#pom-xml" class="headerlink" title="pom.xml"></a>pom.xml</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>thrift<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>thrift<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.apache.org<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.thrift<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>libthrift<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.10.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-simple<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.25<span class="tag">&lt;/<span class="name">version</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="maven导入依赖jar包"><a href="#maven导入依赖jar包" class="headerlink" title="maven导入依赖jar包"></a>maven导入依赖jar包</h4><h5 id="mvn-eclipse-eclipse"><a href="#mvn-eclipse-eclipse" class="headerlink" title="mvn eclipse:eclipse"></a>mvn <strong>eclipse:eclipse</strong></h5><ul><li>右键项目中pom.xml文件，Run as -&gt; 2 maven build</li><li>在Goals中输入<code>eclipse:eclipse</code>，选中<code>Skip Tests</code>，点击Run，即可自动根据pom文件导入所需的包</li></ul><h5 id="mvn-clean"><a href="#mvn-clean" class="headerlink" title="mvn clean"></a>mvn <strong>clean</strong></h5><ul><li>若pom文件内修改，重新导入包可选Run as -&gt; 1 maven build并选择以往导入指令快速导入</li><li>当有版本变更时，一般需要删除旧版本依赖，右键pom.xml文件，并点击 Run as -&gt; maven clean以清空target文件内容并重新生成新依赖</li></ul><h3 id="thrift生成java代码并导入工程"><a href="#thrift生成java代码并导入工程" class="headerlink" title="thrift生成java代码并导入工程"></a>thrift生成java代码并导入工程</h3><h4 id="编写thrift文件"><a href="#编写thrift文件" class="headerlink" title="编写thrift文件"></a>编写thrift文件</h4><ul><li>建立一个名为<code>TestQry.thrift</code>的文件</li></ul><h5 id="TestQry-thrift"><a href="#TestQry-thrift" class="headerlink" title="TestQry.thrift"></a><strong>TestQry.thrift</strong></h5><figure class="highlight thrift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 文件名为TestQry.thrift</span></span><br><span class="line"><span class="comment">* 实现功能：创建一个查询结果struct和一个服务接口service</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> java com.thrift</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">QryResult</span> </span>&#123;</span><br><span class="line">        <span class="number">1</span>:<span class="built_in">i32</span> code;<span class="comment">//返回码, 1成功，0失败</span></span><br><span class="line">        <span class="number">2</span>:<span class="built_in">string</span> msg;<span class="comment">//响应信息</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">service</span> <span class="title">TestQry</span></span>&#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">        * 测试查询接口，当qryCode值为1时返回"成功"的响应信息，qryCode值为其他值时返回"失败"的响应信息</span></span><br><span class="line"><span class="comment">        * @param qryCode测试参数</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        QryResult qryTest(<span class="number">1</span>:<span class="built_in">i32</span> qryCode)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中包含一个结构体QryResult及一个服务TestQry</p><h4 id="利用thrift生成java文件"><a href="#利用thrift生成java文件" class="headerlink" title="利用thrift生成java文件"></a>利用thrift生成java文件</h4><ul><li>将thrift文件放到thrift-0.10.0.exe文件所在目录下（习惯较好）</li><li>打开命令行，输入如下命令：</li></ul><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> Thrift所在目录</span><br><span class="line">thrift-<span class="number">0</span>.<span class="number">10</span>.<span class="number">0</span>.exe [-r] -gen java TestQry.thrift</span><br></pre></td></tr></table></figure><ul><li>未出现输出信息即可。</li><li>thrift在当前文件夹中生成gen-java文件夹，从中找到输出的java文件，存放路径为Thrift\gen-java\com\thrift</li><li>可看到有两个输出文件，即thrift为每一个struct及service都生成了一个java class</li></ul><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">QryResult.java</span><br><span class="line">TestQry.java</span><br></pre></td></tr></table></figure><h5 id="QryResult-java"><a href="#QryResult-java" class="headerlink" title="QryResult.java"></a>QryResult.java</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * Autogenerated by Thrift Compiler (0.10.0)</span><br><span class="line"> *</span><br><span class="line"> * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING</span><br><span class="line"> *  @generated</span><br><span class="line"> */</span><br><span class="line">package com.thrift;</span><br><span class="line"></span><br><span class="line">@SuppressWarnings(&#123;&quot;cast&quot;, &quot;rawtypes&quot;, &quot;serial&quot;, &quot;unchecked&quot;, &quot;unused&quot;&#125;)</span><br><span class="line">@javax.annotation.Generated(value = &quot;Autogenerated by Thrift Compiler (0.10.0)&quot;, date = &quot;2018-04-13&quot;)</span><br><span class="line">public class QryResult implements org.apache.thrift.TBase&lt;QryResult, QryResult._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;QryResult&gt; &#123;</span><br><span class="line">  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct(&quot;QryResult&quot;);</span><br><span class="line"></span><br><span class="line">  private static final org.apache.thrift.protocol.TField CODE_FIELD_DESC = new org.apache.thrift.protocol.TField(&quot;code&quot;, org.apache.thrift.protocol.TType.I32, (short)1);</span><br><span class="line">  private static final org.apache.thrift.protocol.TField MSG_FIELD_DESC = new org.apache.thrift.protocol.TField(&quot;msg&quot;, org.apache.thrift.protocol.TType.STRING, (short)2);</span><br><span class="line"></span><br><span class="line">  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new QryResultStandardSchemeFactory();</span><br><span class="line">  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new QryResultTupleSchemeFactory();</span><br><span class="line"></span><br><span class="line">  /**</span><br><span class="line">   * 返回码, 1成功，0失败</span><br><span class="line">   */</span><br><span class="line">  public int code; // required</span><br><span class="line">  /**</span><br><span class="line">   * 响应信息</span><br><span class="line">   */</span><br><span class="line">  public java.lang.String msg; // required</span><br><span class="line"></span><br><span class="line">  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */</span><br><span class="line">  public enum _Fields implements org.apache.thrift.TFieldIdEnum &#123;</span><br><span class="line">    /**</span><br><span class="line">     * 返回码, 1成功，0失败</span><br><span class="line">     */</span><br><span class="line">    CODE((short)1, &quot;code&quot;),</span><br><span class="line">    /**</span><br><span class="line">     * 响应信息</span><br><span class="line">     */</span><br><span class="line">    MSG((short)2, &quot;msg&quot;);</span><br><span class="line"></span><br><span class="line">    private static final java.util.Map&lt;java.lang.String, _Fields&gt; byName = new java.util.HashMap&lt;java.lang.String, _Fields&gt;();</span><br><span class="line"></span><br><span class="line">    static &#123;</span><br><span class="line">      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) &#123;</span><br><span class="line">        byName.put(field.getFieldName(), field);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Find the _Fields constant that matches fieldId, or null if its not found.</span><br><span class="line">     */</span><br><span class="line">    public static _Fields findByThriftId(int fieldId) &#123;</span><br><span class="line">      switch(fieldId) &#123;</span><br><span class="line">        case 1: // CODE</span><br><span class="line">          return CODE;</span><br><span class="line">        case 2: // MSG</span><br><span class="line">          return MSG;</span><br><span class="line">        default:</span><br><span class="line">          return null;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Find the _Fields constant that matches fieldId, throwing an exception</span><br><span class="line">     * if it is not found.</span><br><span class="line">     */</span><br><span class="line">    public static _Fields findByThriftIdOrThrow(int fieldId) &#123;</span><br><span class="line">      _Fields fields = findByThriftId(fieldId);</span><br><span class="line">      if (fields == null) throw new java.lang.IllegalArgumentException(&quot;Field &quot; + fieldId + &quot; doesn&apos;t exist!&quot;);</span><br><span class="line">      return fields;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Find the _Fields constant that matches name, or null if its not found.</span><br><span class="line">     */</span><br><span class="line">    public static _Fields findByName(java.lang.String name) &#123;</span><br><span class="line">      return byName.get(name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private final short _thriftId;</span><br><span class="line">    private final java.lang.String _fieldName;</span><br><span class="line"></span><br><span class="line">    _Fields(short thriftId, java.lang.String fieldName) &#123;</span><br><span class="line">      _thriftId = thriftId;</span><br><span class="line">      _fieldName = fieldName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public short getThriftFieldId() &#123;</span><br><span class="line">      return _thriftId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public java.lang.String getFieldName() &#123;</span><br><span class="line">      return _fieldName;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  // isset id assignments</span><br><span class="line">  private static final int __CODE_ISSET_ID = 0;</span><br><span class="line">  private byte __isset_bitfield = 0;</span><br><span class="line">  public static final java.util.Map&lt;_Fields, org.apache.thrift.meta_data.FieldMetaData&gt; metaDataMap;</span><br><span class="line">  static &#123;</span><br><span class="line">    java.util.Map&lt;_Fields, org.apache.thrift.meta_data.FieldMetaData&gt; tmpMap = new java.util.EnumMap&lt;_Fields, org.apache.thrift.meta_data.FieldMetaData&gt;(_Fields.class);</span><br><span class="line">    tmpMap.put(_Fields.CODE, new org.apache.thrift.meta_data.FieldMetaData(&quot;code&quot;, org.apache.thrift.TFieldRequirementType.DEFAULT, </span><br><span class="line">        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));</span><br><span class="line">    tmpMap.put(_Fields.MSG, new org.apache.thrift.meta_data.FieldMetaData(&quot;msg&quot;, org.apache.thrift.TFieldRequirementType.DEFAULT, </span><br><span class="line">        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));</span><br><span class="line">    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);</span><br><span class="line">    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(QryResult.class, metaDataMap);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  public QryResult() &#123;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  public QryResult(</span><br><span class="line">    int code,</span><br><span class="line">    java.lang.String msg)</span><br><span class="line">  &#123;</span><br><span class="line">    this();</span><br><span class="line">    this.code = code;</span><br><span class="line">    setCodeIsSet(true);</span><br><span class="line">    this.msg = msg;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  /**</span><br><span class="line">   * Performs a deep copy on &lt;i&gt;other&lt;/i&gt;.</span><br><span class="line">   */</span><br><span class="line">  public QryResult(QryResult other) &#123;</span><br><span class="line">    __isset_bitfield = other.__isset_bitfield;</span><br><span class="line">    this.code = other.code;</span><br><span class="line">    if (other.isSetMsg()) &#123;</span><br><span class="line">      this.msg = other.msg;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  public QryResult deepCopy() &#123;</span><br><span class="line">    return new QryResult(this);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @Override</span><br><span class="line">  public void clear() &#123;</span><br><span class="line">    setCodeIsSet(false);</span><br><span class="line">    this.code = 0;</span><br><span class="line">    this.msg = null;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  /**</span><br><span class="line">   * 返回码, 1成功，0失败</span><br><span class="line">   */</span><br><span class="line">  public int getCode() &#123;</span><br><span class="line">    return this.code;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  /**</span><br><span class="line">   * 返回码, 1成功，0失败</span><br><span class="line">   */</span><br><span class="line">  public QryResult setCode(int code) &#123;</span><br><span class="line">    this.code = code;</span><br><span class="line">    setCodeIsSet(true);</span><br><span class="line">    return this;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  public void unsetCode() &#123;</span><br><span class="line">    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __CODE_ISSET_ID);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  /** Returns true if field code is set (has been assigned a value) and false otherwise */</span><br><span class="line">  public boolean isSetCode() &#123;</span><br><span class="line">    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __CODE_ISSET_ID);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  public void setCodeIsSet(boolean value) &#123;</span><br><span class="line">    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __CODE_ISSET_ID, value);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  /**</span><br><span class="line">   * 响应信息</span><br><span class="line">   */</span><br><span class="line">  public java.lang.String getMsg() &#123;</span><br><span class="line">    return this.msg;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  /**</span><br><span class="line">   * 响应信息</span><br><span class="line">   */</span><br><span class="line">  public QryResult setMsg(java.lang.String msg) &#123;</span><br><span class="line">    this.msg = msg;</span><br><span class="line">    return this;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  public void unsetMsg() &#123;</span><br><span class="line">    this.msg = null;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  /** Returns true if field msg is set (has been assigned a value) and false otherwise */</span><br><span class="line">  public boolean isSetMsg() &#123;</span><br><span class="line">    return this.msg != null;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  public void setMsgIsSet(boolean value) &#123;</span><br><span class="line">    if (!value) &#123;</span><br><span class="line">      this.msg = null;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  public void setFieldValue(_Fields field, java.lang.Object value) &#123;</span><br><span class="line">    switch (field) &#123;</span><br><span class="line">    case CODE:</span><br><span class="line">      if (value == null) &#123;</span><br><span class="line">        unsetCode();</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        setCode((java.lang.Integer)value);</span><br><span class="line">      &#125;</span><br><span class="line">      break;</span><br><span class="line"></span><br><span class="line">    case MSG:</span><br><span class="line">      if (value == null) &#123;</span><br><span class="line">        unsetMsg();</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        setMsg((java.lang.String)value);</span><br><span class="line">      &#125;</span><br><span class="line">      break;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  public java.lang.Object getFieldValue(_Fields field) &#123;</span><br><span class="line">    switch (field) &#123;</span><br><span class="line">    case CODE:</span><br><span class="line">      return getCode();</span><br><span class="line"></span><br><span class="line">    case MSG:</span><br><span class="line">      return getMsg();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    throw new java.lang.IllegalStateException();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */</span><br><span class="line">  public boolean isSet(_Fields field) &#123;</span><br><span class="line">    if (field == null) &#123;</span><br><span class="line">      throw new java.lang.IllegalArgumentException();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    switch (field) &#123;</span><br><span class="line">    case CODE:</span><br><span class="line">      return isSetCode();</span><br><span class="line">    case MSG:</span><br><span class="line">      return isSetMsg();</span><br><span class="line">    &#125;</span><br><span class="line">    throw new java.lang.IllegalStateException();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @Override</span><br><span class="line">  public boolean equals(java.lang.Object that) &#123;</span><br><span class="line">    if (that == null)</span><br><span class="line">      return false;</span><br><span class="line">    if (that instanceof QryResult)</span><br><span class="line">      return this.equals((QryResult)that);</span><br><span class="line">    return false;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  public boolean equals(QryResult that) &#123;</span><br><span class="line">    if (that == null)</span><br><span class="line">      return false;</span><br><span class="line">    if (this == that)</span><br><span class="line">      return true;</span><br><span class="line"></span><br><span class="line">    boolean this_present_code = true;</span><br><span class="line">    boolean that_present_code = true;</span><br><span class="line">    if (this_present_code || that_present_code) &#123;</span><br><span class="line">      if (!(this_present_code &amp;&amp; that_present_code))</span><br><span class="line">        return false;</span><br><span class="line">      if (this.code != that.code)</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    boolean this_present_msg = true &amp;&amp; this.isSetMsg();</span><br><span class="line">    boolean that_present_msg = true &amp;&amp; that.isSetMsg();</span><br><span class="line">    if (this_present_msg || that_present_msg) &#123;</span><br><span class="line">      if (!(this_present_msg &amp;&amp; that_present_msg))</span><br><span class="line">        return false;</span><br><span class="line">      if (!this.msg.equals(that.msg))</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return true;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @Override</span><br><span class="line">  public int hashCode() &#123;</span><br><span class="line">    int hashCode = 1;</span><br><span class="line"></span><br><span class="line">    hashCode = hashCode * 8191 + code;</span><br><span class="line"></span><br><span class="line">    hashCode = hashCode * 8191 + ((isSetMsg()) ? 131071 : 524287);</span><br><span class="line">    if (isSetMsg())</span><br><span class="line">      hashCode = hashCode * 8191 + msg.hashCode();</span><br><span class="line"></span><br><span class="line">    return hashCode;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @Override</span><br><span class="line">  public int compareTo(QryResult other) &#123;</span><br><span class="line">    if (!getClass().equals(other.getClass())) &#123;</span><br><span class="line">      return getClass().getName().compareTo(other.getClass().getName());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    int lastComparison = 0;</span><br><span class="line"></span><br><span class="line">    lastComparison = java.lang.Boolean.valueOf(isSetCode()).compareTo(other.isSetCode());</span><br><span class="line">    if (lastComparison != 0) &#123;</span><br><span class="line">      return lastComparison;</span><br><span class="line">    &#125;</span><br><span class="line">    if (isSetCode()) &#123;</span><br><span class="line">      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.code, other.code);</span><br><span class="line">      if (lastComparison != 0) &#123;</span><br><span class="line">        return lastComparison;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    lastComparison = java.lang.Boolean.valueOf(isSetMsg()).compareTo(other.isSetMsg());</span><br><span class="line">    if (lastComparison != 0) &#123;</span><br><span class="line">      return lastComparison;</span><br><span class="line">    &#125;</span><br><span class="line">    if (isSetMsg()) &#123;</span><br><span class="line">      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.msg, other.msg);</span><br><span class="line">      if (lastComparison != 0) &#123;</span><br><span class="line">        return lastComparison;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  public _Fields fieldForId(int fieldId) &#123;</span><br><span class="line">    return _Fields.findByThriftId(fieldId);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException &#123;</span><br><span class="line">    scheme(iprot).read(iprot, this);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException &#123;</span><br><span class="line">    scheme(oprot).write(oprot, this);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @Override</span><br><span class="line">  public java.lang.String toString() &#123;</span><br><span class="line">    java.lang.StringBuilder sb = new java.lang.StringBuilder(&quot;QryResult(&quot;);</span><br><span class="line">    boolean first = true;</span><br><span class="line"></span><br><span class="line">    sb.append(&quot;code:&quot;);</span><br><span class="line">    sb.append(this.code);</span><br><span class="line">    first = false;</span><br><span class="line">    if (!first) sb.append(&quot;, &quot;);</span><br><span class="line">    sb.append(&quot;msg:&quot;);</span><br><span class="line">    if (this.msg == null) &#123;</span><br><span class="line">      sb.append(&quot;null&quot;);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      sb.append(this.msg);</span><br><span class="line">    &#125;</span><br><span class="line">    first = false;</span><br><span class="line">    sb.append(&quot;)&quot;);</span><br><span class="line">    return sb.toString();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  public void validate() throws org.apache.thrift.TException &#123;</span><br><span class="line">    // check for required fields</span><br><span class="line">    // check for sub-struct validity</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException &#123;</span><br><span class="line">    try &#123;</span><br><span class="line">      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));</span><br><span class="line">    &#125; catch (org.apache.thrift.TException te) &#123;</span><br><span class="line">      throw new java.io.IOException(te);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException &#123;</span><br><span class="line">    try &#123;</span><br><span class="line">      // it doesn&apos;t seem like you should have to do this, but java serialization is wacky, and doesn&apos;t call the default constructor.</span><br><span class="line">      __isset_bitfield = 0;</span><br><span class="line">      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));</span><br><span class="line">    &#125; catch (org.apache.thrift.TException te) &#123;</span><br><span class="line">      throw new java.io.IOException(te);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  private static class QryResultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory &#123;</span><br><span class="line">    public QryResultStandardScheme getScheme() &#123;</span><br><span class="line">      return new QryResultStandardScheme();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  private static class QryResultStandardScheme extends org.apache.thrift.scheme.StandardScheme&lt;QryResult&gt; &#123;</span><br><span class="line"></span><br><span class="line">    public void read(org.apache.thrift.protocol.TProtocol iprot, QryResult struct) throws org.apache.thrift.TException &#123;</span><br><span class="line">      org.apache.thrift.protocol.TField schemeField;</span><br><span class="line">      iprot.readStructBegin();</span><br><span class="line">      while (true)</span><br><span class="line">      &#123;</span><br><span class="line">        schemeField = iprot.readFieldBegin();</span><br><span class="line">        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) &#123; </span><br><span class="line">          break;</span><br><span class="line">        &#125;</span><br><span class="line">        switch (schemeField.id) &#123;</span><br><span class="line">          case 1: // CODE</span><br><span class="line">            if (schemeField.type == org.apache.thrift.protocol.TType.I32) &#123;</span><br><span class="line">              struct.code = iprot.readI32();</span><br><span class="line">              struct.setCodeIsSet(true);</span><br><span class="line">            &#125; else &#123; </span><br><span class="line">              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);</span><br><span class="line">            &#125;</span><br><span class="line">            break;</span><br><span class="line">          case 2: // MSG</span><br><span class="line">            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) &#123;</span><br><span class="line">              struct.msg = iprot.readString();</span><br><span class="line">              struct.setMsgIsSet(true);</span><br><span class="line">            &#125; else &#123; </span><br><span class="line">              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);</span><br><span class="line">            &#125;</span><br><span class="line">            break;</span><br><span class="line">          default:</span><br><span class="line">            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);</span><br><span class="line">        &#125;</span><br><span class="line">        iprot.readFieldEnd();</span><br><span class="line">      &#125;</span><br><span class="line">      iprot.readStructEnd();</span><br><span class="line"></span><br><span class="line">      // check for required fields of primitive type, which can&apos;t be checked in the validate method</span><br><span class="line">      struct.validate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void write(org.apache.thrift.protocol.TProtocol oprot, QryResult struct) throws org.apache.thrift.TException &#123;</span><br><span class="line">      struct.validate();</span><br><span class="line"></span><br><span class="line">      oprot.writeStructBegin(STRUCT_DESC);</span><br><span class="line">      oprot.writeFieldBegin(CODE_FIELD_DESC);</span><br><span class="line">      oprot.writeI32(struct.code);</span><br><span class="line">      oprot.writeFieldEnd();</span><br><span class="line">      if (struct.msg != null) &#123;</span><br><span class="line">        oprot.writeFieldBegin(MSG_FIELD_DESC);</span><br><span class="line">        oprot.writeString(struct.msg);</span><br><span class="line">        oprot.writeFieldEnd();</span><br><span class="line">      &#125;</span><br><span class="line">      oprot.writeFieldStop();</span><br><span class="line">      oprot.writeStructEnd();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  private static class QryResultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory &#123;</span><br><span class="line">    public QryResultTupleScheme getScheme() &#123;</span><br><span class="line">      return new QryResultTupleScheme();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  private static class QryResultTupleScheme extends org.apache.thrift.scheme.TupleScheme&lt;QryResult&gt; &#123;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void write(org.apache.thrift.protocol.TProtocol prot, QryResult struct) throws org.apache.thrift.TException &#123;</span><br><span class="line">      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;</span><br><span class="line">      java.util.BitSet optionals = new java.util.BitSet();</span><br><span class="line">      if (struct.isSetCode()) &#123;</span><br><span class="line">        optionals.set(0);</span><br><span class="line">      &#125;</span><br><span class="line">      if (struct.isSetMsg()) &#123;</span><br><span class="line">        optionals.set(1);</span><br><span class="line">      &#125;</span><br><span class="line">      oprot.writeBitSet(optionals, 2);</span><br><span class="line">      if (struct.isSetCode()) &#123;</span><br><span class="line">        oprot.writeI32(struct.code);</span><br><span class="line">      &#125;</span><br><span class="line">      if (struct.isSetMsg()) &#123;</span><br><span class="line">        oprot.writeString(struct.msg);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void read(org.apache.thrift.protocol.TProtocol prot, QryResult struct) throws org.apache.thrift.TException &#123;</span><br><span class="line">      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;</span><br><span class="line">      java.util.BitSet incoming = iprot.readBitSet(2);</span><br><span class="line">      if (incoming.get(0)) &#123;</span><br><span class="line">        struct.code = iprot.readI32();</span><br><span class="line">        struct.setCodeIsSet(true);</span><br><span class="line">      &#125;</span><br><span class="line">      if (incoming.get(1)) &#123;</span><br><span class="line">        struct.msg = iprot.readString();</span><br><span class="line">        struct.setMsgIsSet(true);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  private static &lt;S extends org.apache.thrift.scheme.IScheme&gt; S scheme(org.apache.thrift.protocol.TProtocol proto) &#123;</span><br><span class="line">    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="TestQry-java"><a href="#TestQry-java" class="headerlink" title="TestQry.java"></a>TestQry.java</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Autogenerated by Thrift Compiler (0.10.0)</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING</span></span><br><span class="line"><span class="comment"> *  <span class="doctag">@generated</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">package</span> com.thrift;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SuppressWarnings</span>(&#123;<span class="string">"cast"</span>, <span class="string">"rawtypes"</span>, <span class="string">"serial"</span>, <span class="string">"unchecked"</span>, <span class="string">"unused"</span>&#125;)</span><br><span class="line"><span class="meta">@javax</span>.annotation.Generated(value = <span class="string">"Autogenerated by Thrift Compiler (0.10.0)"</span>, date = <span class="string">"2018-04-13"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestQry</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Iface</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 测试查询接口，当qryCode值为1时返回"成功"的响应信息，qryCode值为其他值时返回"失败"的响应信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> qryCode测试参数</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> qryCode</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> QryResult <span class="title">qryTest</span><span class="params">(<span class="keyword">int</span> qryCode)</span> <span class="keyword">throws</span> org.apache.thrift.TException</span>;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">AsyncIface</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">qryTest</span><span class="params">(<span class="keyword">int</span> qryCode, org.apache.thrift.async.AsyncMethodCallback&lt;QryResult&gt; resultHandler)</span> <span class="keyword">throws</span> org.apache.thrift.TException</span>;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Client</span> <span class="keyword">extends</span> <span class="title">org</span>.<span class="title">apache</span>.<span class="title">thrift</span>.<span class="title">TServiceClient</span> <span class="keyword">implements</span> <span class="title">Iface</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Factory</span> <span class="keyword">implements</span> <span class="title">org</span>.<span class="title">apache</span>.<span class="title">thrift</span>.<span class="title">TServiceClientFactory</span>&lt;<span class="title">Client</span>&gt; </span>&#123;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="title">Factory</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> Client <span class="title">getClient</span><span class="params">(org.apache.thrift.protocol.TProtocol prot)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Client(prot);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> Client <span class="title">getClient</span><span class="params">(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Client(iprot, oprot);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Client</span><span class="params">(org.apache.thrift.protocol.TProtocol prot)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">      <span class="keyword">super</span>(prot, prot);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Client</span><span class="params">(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">super</span>(iprot, oprot);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> QryResult <span class="title">qryTest</span><span class="params">(<span class="keyword">int</span> qryCode)</span> <span class="keyword">throws</span> org.apache.thrift.TException</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">      send_qryTest(qryCode);</span><br><span class="line">      <span class="keyword">return</span> recv_qryTest();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send_qryTest</span><span class="params">(<span class="keyword">int</span> qryCode)</span> <span class="keyword">throws</span> org.apache.thrift.TException</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">      qryTest_args args = <span class="keyword">new</span> qryTest_args();</span><br><span class="line">      args.setQryCode(qryCode);</span><br><span class="line">      sendBase(<span class="string">"qryTest"</span>, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> QryResult <span class="title">recv_qryTest</span><span class="params">()</span> <span class="keyword">throws</span> org.apache.thrift.TException</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">      qryTest_result result = <span class="keyword">new</span> qryTest_result();</span><br><span class="line">      receiveBase(result, <span class="string">"qryTest"</span>);</span><br><span class="line">      <span class="keyword">if</span> (result.isSetSuccess()) &#123;</span><br><span class="line">        <span class="keyword">return</span> result.success;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, <span class="string">"qryTest failed: unknown result"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">AsyncClient</span> <span class="keyword">extends</span> <span class="title">org</span>.<span class="title">apache</span>.<span class="title">thrift</span>.<span class="title">async</span>.<span class="title">TAsyncClient</span> <span class="keyword">implements</span> <span class="title">AsyncIface</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Factory</span> <span class="keyword">implements</span> <span class="title">org</span>.<span class="title">apache</span>.<span class="title">thrift</span>.<span class="title">async</span>.<span class="title">TAsyncClientFactory</span>&lt;<span class="title">AsyncClient</span>&gt; </span>&#123;</span><br><span class="line">      <span class="keyword">private</span> org.apache.thrift.async.TAsyncClientManager clientManager;</span><br><span class="line">      <span class="keyword">private</span> org.apache.thrift.protocol.TProtocolFactory protocolFactory;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="title">Factory</span><span class="params">(org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.protocol.TProtocolFactory protocolFactory)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.clientManager = clientManager;</span><br><span class="line">        <span class="keyword">this</span>.protocolFactory = protocolFactory;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> AsyncClient <span class="title">getAsyncClient</span><span class="params">(org.apache.thrift.transport.TNonblockingTransport transport)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> AsyncClient(protocolFactory, clientManager, transport);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">AsyncClient</span><span class="params">(org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.transport.TNonblockingTransport transport)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">super</span>(protocolFactory, clientManager, transport);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">qryTest</span><span class="params">(<span class="keyword">int</span> qryCode, org.apache.thrift.async.AsyncMethodCallback&lt;QryResult&gt; resultHandler)</span> <span class="keyword">throws</span> org.apache.thrift.TException </span>&#123;</span><br><span class="line">      checkReady();</span><br><span class="line">      qryTest_call method_call = <span class="keyword">new</span> qryTest_call(qryCode, resultHandler, <span class="keyword">this</span>, ___protocolFactory, ___transport);</span><br><span class="line">      <span class="keyword">this</span>.___currentMethod = method_call;</span><br><span class="line">      ___manager.call(method_call);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">qryTest_call</span> <span class="keyword">extends</span> <span class="title">org</span>.<span class="title">apache</span>.<span class="title">thrift</span>.<span class="title">async</span>.<span class="title">TAsyncMethodCall</span>&lt;<span class="title">QryResult</span>&gt; </span>&#123;</span><br><span class="line">      <span class="keyword">private</span> <span class="keyword">int</span> qryCode;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="title">qryTest_call</span><span class="params">(<span class="keyword">int</span> qryCode, org.apache.thrift.async.AsyncMethodCallback&lt;QryResult&gt; resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport)</span> <span class="keyword">throws</span> org.apache.thrift.TException </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(client, protocolFactory, transport, resultHandler, <span class="keyword">false</span>);</span><br><span class="line">        <span class="keyword">this</span>.qryCode = qryCode;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">write_args</span><span class="params">(org.apache.thrift.protocol.TProtocol prot)</span> <span class="keyword">throws</span> org.apache.thrift.TException </span>&#123;</span><br><span class="line">        prot.writeMessageBegin(<span class="keyword">new</span> org.apache.thrift.protocol.TMessage(<span class="string">"qryTest"</span>, org.apache.thrift.protocol.TMessageType.CALL, <span class="number">0</span>));</span><br><span class="line">        qryTest_args args = <span class="keyword">new</span> qryTest_args();</span><br><span class="line">        args.setQryCode(qryCode);</span><br><span class="line">        args.write(prot);</span><br><span class="line">        prot.writeMessageEnd();</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">public</span> QryResult <span class="title">getResult</span><span class="params">()</span> <span class="keyword">throws</span> org.apache.thrift.TException </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) &#123;</span><br><span class="line">          <span class="keyword">throw</span> <span class="keyword">new</span> java.lang.IllegalStateException(<span class="string">"Method call not finished!"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = <span class="keyword">new</span> org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());</span><br><span class="line">        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">new</span> Client(prot)).recv_qryTest();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Processor</span>&lt;<span class="title">I</span> <span class="keyword">extends</span> <span class="title">Iface</span>&gt; <span class="keyword">extends</span> <span class="title">org</span>.<span class="title">apache</span>.<span class="title">thrift</span>.<span class="title">TBaseProcessor</span>&lt;<span class="title">I</span>&gt; <span class="keyword">implements</span> <span class="title">org</span>.<span class="title">apache</span>.<span class="title">thrift</span>.<span class="title">TProcessor</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> org.slf4j.Logger _LOGGER = org.slf4j.LoggerFactory.getLogger(Processor.class.getName());</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Processor</span><span class="params">(I iface)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">super</span>(iface, getProcessMap(<span class="keyword">new</span> java.util.HashMap&lt;java.lang.String, org.apache.thrift.ProcessFunction&lt;I, ? extends org.apache.thrift.TBase&gt;&gt;()));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="title">Processor</span><span class="params">(I iface, java.util.Map&lt;java.lang.String, org.apache.thrift.ProcessFunction&lt;I, ? extends org.apache.thrift.TBase&gt;&gt; processMap)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">super</span>(iface, getProcessMap(processMap));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> &lt;I extends Iface&gt; java.util.Map&lt;java.lang.String,  org.apache.thrift.ProcessFunction&lt;I, ? extends org.apache.thrift.TBase&gt;&gt; getProcessMap(java.util.Map&lt;java.lang.String, org.apache.thrift.ProcessFunction&lt;I, ? extends  org.apache.thrift.TBase&gt;&gt; processMap) &#123;</span><br><span class="line">      processMap.put(<span class="string">"qryTest"</span>, <span class="keyword">new</span> qryTest());</span><br><span class="line">      <span class="keyword">return</span> processMap;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">qryTest</span>&lt;<span class="title">I</span> <span class="keyword">extends</span> <span class="title">Iface</span>&gt; <span class="keyword">extends</span> <span class="title">org</span>.<span class="title">apache</span>.<span class="title">thrift</span>.<span class="title">ProcessFunction</span>&lt;<span class="title">I</span>, <span class="title">qryTest_args</span>&gt; </span>&#123;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="title">qryTest</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(<span class="string">"qryTest"</span>);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">public</span> qryTest_args <span class="title">getEmptyArgsInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> qryTest_args();</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">protected</span> <span class="keyword">boolean</span> <span class="title">isOneway</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">public</span> qryTest_result <span class="title">getResult</span><span class="params">(I iface, qryTest_args args)</span> <span class="keyword">throws</span> org.apache.thrift.TException </span>&#123;</span><br><span class="line">        qryTest_result result = <span class="keyword">new</span> qryTest_result();</span><br><span class="line">        result.success = iface.qryTest(args.qryCode);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">AsyncProcessor</span>&lt;<span class="title">I</span> <span class="keyword">extends</span> <span class="title">AsyncIface</span>&gt; <span class="keyword">extends</span> <span class="title">org</span>.<span class="title">apache</span>.<span class="title">thrift</span>.<span class="title">TBaseAsyncProcessor</span>&lt;<span class="title">I</span>&gt; </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> org.slf4j.Logger _LOGGER = org.slf4j.LoggerFactory.getLogger(AsyncProcessor.class.getName());</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">AsyncProcessor</span><span class="params">(I iface)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">super</span>(iface, getProcessMap(<span class="keyword">new</span> java.util.HashMap&lt;java.lang.String, org.apache.thrift.AsyncProcessFunction&lt;I, ? extends org.apache.thrift.TBase, ?&gt;&gt;()));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="title">AsyncProcessor</span><span class="params">(I iface, java.util.Map&lt;java.lang.String,  org.apache.thrift.AsyncProcessFunction&lt;I, ? extends  org.apache.thrift.TBase, ?&gt;&gt; processMap)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">super</span>(iface, getProcessMap(processMap));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> &lt;I extends AsyncIface&gt; java.util.Map&lt;java.lang.String,  org.apache.thrift.AsyncProcessFunction&lt;I, ? extends  org.apache.thrift.TBase,?&gt;&gt; getProcessMap(java.util.Map&lt;java.lang.String,  org.apache.thrift.AsyncProcessFunction&lt;I, ? extends  org.apache.thrift.TBase, ?&gt;&gt; processMap) &#123;</span><br><span class="line">      processMap.put(<span class="string">"qryTest"</span>, <span class="keyword">new</span> qryTest());</span><br><span class="line">      <span class="keyword">return</span> processMap;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">qryTest</span>&lt;<span class="title">I</span> <span class="keyword">extends</span> <span class="title">AsyncIface</span>&gt; <span class="keyword">extends</span> <span class="title">org</span>.<span class="title">apache</span>.<span class="title">thrift</span>.<span class="title">AsyncProcessFunction</span>&lt;<span class="title">I</span>, <span class="title">qryTest_args</span>, <span class="title">QryResult</span>&gt; </span>&#123;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="title">qryTest</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(<span class="string">"qryTest"</span>);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">public</span> qryTest_args <span class="title">getEmptyArgsInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> qryTest_args();</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">public</span> org.apache.thrift.async.<span class="function">AsyncMethodCallback&lt;QryResult&gt; <span class="title">getResultHandler</span><span class="params">(<span class="keyword">final</span> org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, <span class="keyword">final</span> <span class="keyword">int</span> seqid)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> org.apache.thrift.AsyncProcessFunction fcall = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> org.apache.thrift.async.AsyncMethodCallback&lt;QryResult&gt;() &#123; </span><br><span class="line">          <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onComplete</span><span class="params">(QryResult o)</span> </span>&#123;</span><br><span class="line">            qryTest_result result = <span class="keyword">new</span> qryTest_result();</span><br><span class="line">            result.success = o;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (org.apache.thrift.transport.TTransportException e) &#123;</span><br><span class="line">              _LOGGER.error(<span class="string">"TTransportException writing to internal frame buffer"</span>, e);</span><br><span class="line">              fb.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (java.lang.Exception e) &#123;</span><br><span class="line">              _LOGGER.error(<span class="string">"Exception writing to internal frame buffer"</span>, e);</span><br><span class="line">              onError(e);</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onError</span><span class="params">(java.lang.Exception e)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">byte</span> msgType = org.apache.thrift.protocol.TMessageType.REPLY;</span><br><span class="line">            org.apache.thrift.TSerializable msg;</span><br><span class="line">            qryTest_result result = <span class="keyword">new</span> qryTest_result();</span><br><span class="line">            <span class="keyword">if</span> (e <span class="keyword">instanceof</span> org.apache.thrift.transport.TTransportException) &#123;</span><br><span class="line">              _LOGGER.error(<span class="string">"TTransportException inside handler"</span>, e);</span><br><span class="line">              fb.close();</span><br><span class="line">              <span class="keyword">return</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e <span class="keyword">instanceof</span> org.apache.thrift.TApplicationException) &#123;</span><br><span class="line">              _LOGGER.error(<span class="string">"TApplicationException inside handler"</span>, e);</span><br><span class="line">              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;</span><br><span class="line">              msg = (org.apache.thrift.TApplicationException)e;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              _LOGGER.error(<span class="string">"Exception inside handler"</span>, e);</span><br><span class="line">              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;</span><br><span class="line">              msg = <span class="keyword">new</span> org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">              fcall.sendResponse(fb,msg,msgType,seqid);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (java.lang.Exception ex) &#123;</span><br><span class="line">              _LOGGER.error(<span class="string">"Exception writing to internal frame buffer"</span>, ex);</span><br><span class="line">              fb.close();</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">protected</span> <span class="keyword">boolean</span> <span class="title">isOneway</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">start</span><span class="params">(I iface, qryTest_args args, org.apache.thrift.async.AsyncMethodCallback&lt;QryResult&gt; resultHandler)</span> <span class="keyword">throws</span> org.apache.thrift.TException </span>&#123;</span><br><span class="line">        iface.qryTest(args.qryCode,resultHandler);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">qryTest_args</span> <span class="keyword">implements</span> <span class="title">org</span>.<span class="title">apache</span>.<span class="title">thrift</span>.<span class="title">TBase</span>&lt;<span class="title">qryTest_args</span>, <span class="title">qryTest_args</span>.<span class="title">_Fields</span>&gt;, <span class="title">java</span>.<span class="title">io</span>.<span class="title">Serializable</span>, <span class="title">Cloneable</span>, <span class="title">Comparable</span>&lt;<span class="title">qryTest_args</span>&gt;   </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> org.apache.thrift.protocol.TStruct STRUCT_DESC = <span class="keyword">new</span> org.apache.thrift.protocol.TStruct(<span class="string">"qryTest_args"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> org.apache.thrift.protocol.TField QRY_CODE_FIELD_DESC = <span class="keyword">new</span> org.apache.thrift.protocol.TField(<span class="string">"qryCode"</span>, org.apache.thrift.protocol.TType.I32, (<span class="keyword">short</span>)<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = <span class="keyword">new</span> qryTest_argsStandardSchemeFactory();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = <span class="keyword">new</span> qryTest_argsTupleSchemeFactory();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> qryCode; <span class="comment">// required</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">enum</span> _Fields implements org.apache.thrift.TFieldIdEnum &#123;</span><br><span class="line">      QRY_CODE((<span class="keyword">short</span>)<span class="number">1</span>, <span class="string">"qryCode"</span>);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> java.util.Map&lt;java.lang.String, _Fields&gt; byName = <span class="keyword">new</span> java.util.HashMap&lt;java.lang.String, _Fields&gt;();</span><br><span class="line"></span><br><span class="line">      <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (_Fields field : java.util.EnumSet.allOf(_Fields.class)) &#123;</span><br><span class="line">          byName.put(field.getFieldName(), field);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">/**</span></span><br><span class="line"><span class="comment">       * Find the _Fields constant that matches fieldId, or null if its not found.</span></span><br><span class="line"><span class="comment">       */</span></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> _Fields <span class="title">findByThriftId</span><span class="params">(<span class="keyword">int</span> fieldId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span>(fieldId) &#123;</span><br><span class="line">          <span class="keyword">case</span> <span class="number">1</span>: <span class="comment">// QRY_CODE</span></span><br><span class="line">            <span class="keyword">return</span> QRY_CODE;</span><br><span class="line">          <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">/**</span></span><br><span class="line"><span class="comment">       * Find the _Fields constant that matches fieldId, throwing an exception</span></span><br><span class="line"><span class="comment">       * if it is not found.</span></span><br><span class="line"><span class="comment">       */</span></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> _Fields <span class="title">findByThriftIdOrThrow</span><span class="params">(<span class="keyword">int</span> fieldId)</span> </span>&#123;</span><br><span class="line">        _Fields fields = findByThriftId(fieldId);</span><br><span class="line">        <span class="keyword">if</span> (fields == <span class="keyword">null</span>) <span class="keyword">throw</span> <span class="keyword">new</span> java.lang.IllegalArgumentException(<span class="string">"Field "</span> + fieldId + <span class="string">" doesn't exist!"</span>);</span><br><span class="line">        <span class="keyword">return</span> fields;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">/**</span></span><br><span class="line"><span class="comment">       * Find the _Fields constant that matches name, or null if its not found.</span></span><br><span class="line"><span class="comment">       */</span></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> _Fields <span class="title">findByName</span><span class="params">(java.lang.String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> byName.get(name);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">short</span> _thriftId;</span><br><span class="line">      <span class="keyword">private</span> <span class="keyword">final</span> java.lang.String _fieldName;</span><br><span class="line"></span><br><span class="line">      _Fields(<span class="keyword">short</span> thriftId, java.lang.String fieldName) &#123;</span><br><span class="line">        _thriftId = thriftId;</span><br><span class="line">        _fieldName = fieldName;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">short</span> <span class="title">getThriftFieldId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> _thriftId;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">public</span> java.lang.<span class="function">String <span class="title">getFieldName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> _fieldName;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// isset id assignments</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> __QRYCODE_ISSET_ID = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">byte</span> __isset_bitfield = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> java.util.Map&lt;_Fields, org.apache.thrift.meta_data.FieldMetaData&gt; metaDataMap;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">      java.util.Map&lt;_Fields, org.apache.thrift.meta_data.FieldMetaData&gt; tmpMap = <span class="keyword">new</span> java.util.EnumMap&lt;_Fields, org.apache.thrift.meta_data.FieldMetaData&gt;(_Fields.class);</span><br><span class="line">      tmpMap.put(_Fields.QRY_CODE, <span class="keyword">new</span> org.apache.thrift.meta_data.FieldMetaData(<span class="string">"qryCode"</span>, org.apache.thrift.TFieldRequirementType.DEFAULT, </span><br><span class="line">          <span class="keyword">new</span> org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));</span><br><span class="line">      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);</span><br><span class="line">      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(qryTest_args.class, metaDataMap);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">qryTest_args</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">qryTest_args</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">      <span class="keyword">int</span> qryCode)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>();</span><br><span class="line">      <span class="keyword">this</span>.qryCode = qryCode;</span><br><span class="line">      setQryCodeIsSet(<span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Performs a deep copy on &lt;i&gt;other&lt;/i&gt;.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">qryTest_args</span><span class="params">(qryTest_args other)</span> </span>&#123;</span><br><span class="line">      __isset_bitfield = other.__isset_bitfield;</span><br><span class="line">      <span class="keyword">this</span>.qryCode = other.qryCode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> qryTest_args <span class="title">deepCopy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> qryTest_args(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">clear</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      setQryCodeIsSet(<span class="keyword">false</span>);</span><br><span class="line">      <span class="keyword">this</span>.qryCode = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getQryCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">this</span>.qryCode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> qryTest_args <span class="title">setQryCode</span><span class="params">(<span class="keyword">int</span> qryCode)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.qryCode = qryCode;</span><br><span class="line">      setQryCodeIsSet(<span class="keyword">true</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">unsetQryCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __QRYCODE_ISSET_ID);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** Returns true if field qryCode is set (has been assigned a value) and false otherwise */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isSetQryCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __QRYCODE_ISSET_ID);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setQryCodeIsSet</span><span class="params">(<span class="keyword">boolean</span> value)</span> </span>&#123;</span><br><span class="line">      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __QRYCODE_ISSET_ID, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setFieldValue</span><span class="params">(_Fields field, java.lang.Object value)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">switch</span> (field) &#123;</span><br><span class="line">      <span class="keyword">case</span> QRY_CODE:</span><br><span class="line">        <span class="keyword">if</span> (value == <span class="keyword">null</span>) &#123;</span><br><span class="line">          unsetQryCode();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          setQryCode((java.lang.Integer)value);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> java.lang.<span class="function">Object <span class="title">getFieldValue</span><span class="params">(_Fields field)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">switch</span> (field) &#123;</span><br><span class="line">      <span class="keyword">case</span> QRY_CODE:</span><br><span class="line">        <span class="keyword">return</span> getQryCode();</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> java.lang.IllegalStateException();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isSet</span><span class="params">(_Fields field)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (field == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> java.lang.IllegalArgumentException();</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">switch</span> (field) &#123;</span><br><span class="line">      <span class="keyword">case</span> QRY_CODE:</span><br><span class="line">        <span class="keyword">return</span> isSetQryCode();</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> java.lang.IllegalStateException();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(java.lang.Object that)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (that == <span class="keyword">null</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">      <span class="keyword">if</span> (that <span class="keyword">instanceof</span> qryTest_args)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.equals((qryTest_args)that);</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(qryTest_args that)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (that == <span class="keyword">null</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">this</span> == that)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">boolean</span> this_present_qryCode = <span class="keyword">true</span>;</span><br><span class="line">      <span class="keyword">boolean</span> that_present_qryCode = <span class="keyword">true</span>;</span><br><span class="line">      <span class="keyword">if</span> (this_present_qryCode || that_present_qryCode) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!(this_present_qryCode &amp;&amp; that_present_qryCode))</span><br><span class="line">          <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.qryCode != that.qryCode)</span><br><span class="line">          <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">hashCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">int</span> hashCode = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">      hashCode = hashCode * <span class="number">8191</span> + qryCode;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> hashCode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compareTo</span><span class="params">(qryTest_args other)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (!getClass().equals(other.getClass())) &#123;</span><br><span class="line">        <span class="keyword">return</span> getClass().getName().compareTo(other.getClass().getName());</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">int</span> lastComparison = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">      lastComparison = java.lang.Boolean.valueOf(isSetQryCode()).compareTo(other.isSetQryCode());</span><br><span class="line">      <span class="keyword">if</span> (lastComparison != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> lastComparison;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (isSetQryCode()) &#123;</span><br><span class="line">        lastComparison = org.apache.thrift.TBaseHelper.compareTo(<span class="keyword">this</span>.qryCode, other.qryCode);</span><br><span class="line">        <span class="keyword">if</span> (lastComparison != <span class="number">0</span>) &#123;</span><br><span class="line">          <span class="keyword">return</span> lastComparison;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> _Fields <span class="title">fieldForId</span><span class="params">(<span class="keyword">int</span> fieldId)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> _Fields.findByThriftId(fieldId);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(org.apache.thrift.protocol.TProtocol iprot)</span> <span class="keyword">throws</span> org.apache.thrift.TException </span>&#123;</span><br><span class="line">      scheme(iprot).read(iprot, <span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">(org.apache.thrift.protocol.TProtocol oprot)</span> <span class="keyword">throws</span> org.apache.thrift.TException </span>&#123;</span><br><span class="line">      scheme(oprot).write(oprot, <span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> java.lang.<span class="function">String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      java.lang.StringBuilder sb = <span class="keyword">new</span> java.lang.StringBuilder(<span class="string">"qryTest_args("</span>);</span><br><span class="line">      <span class="keyword">boolean</span> first = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">      sb.append(<span class="string">"qryCode:"</span>);</span><br><span class="line">      sb.append(<span class="keyword">this</span>.qryCode);</span><br><span class="line">      first = <span class="keyword">false</span>;</span><br><span class="line">      sb.append(<span class="string">")"</span>);</span><br><span class="line">      <span class="keyword">return</span> sb.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">validate</span><span class="params">()</span> <span class="keyword">throws</span> org.apache.thrift.TException </span>&#123;</span><br><span class="line">      <span class="comment">// check for required fields</span></span><br><span class="line">      <span class="comment">// check for sub-struct validity</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">writeObject</span><span class="params">(java.io.ObjectOutputStream out)</span> <span class="keyword">throws</span> java.io.IOException </span>&#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        write(<span class="keyword">new</span> org.apache.thrift.protocol.TCompactProtocol(<span class="keyword">new</span> org.apache.thrift.transport.TIOStreamTransport(out)));</span><br><span class="line">      &#125; <span class="keyword">catch</span> (org.apache.thrift.TException te) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> java.io.IOException(te);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">readObject</span><span class="params">(java.io.ObjectInputStream in)</span> <span class="keyword">throws</span> java.io.IOException, java.lang.ClassNotFoundException </span>&#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.</span></span><br><span class="line">        __isset_bitfield = <span class="number">0</span>;</span><br><span class="line">        read(<span class="keyword">new</span> org.apache.thrift.protocol.TCompactProtocol(<span class="keyword">new</span> org.apache.thrift.transport.TIOStreamTransport(in)));</span><br><span class="line">      &#125; <span class="keyword">catch</span> (org.apache.thrift.TException te) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> java.io.IOException(te);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">qryTest_argsStandardSchemeFactory</span> <span class="keyword">implements</span> <span class="title">org</span>.<span class="title">apache</span>.<span class="title">thrift</span>.<span class="title">scheme</span>.<span class="title">SchemeFactory</span> </span>&#123;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> qryTest_argsStandardScheme <span class="title">getScheme</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> qryTest_argsStandardScheme();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">qryTest_argsStandardScheme</span> <span class="keyword">extends</span> <span class="title">org</span>.<span class="title">apache</span>.<span class="title">thrift</span>.<span class="title">scheme</span>.<span class="title">StandardScheme</span>&lt;<span class="title">qryTest_args</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(org.apache.thrift.protocol.TProtocol iprot, qryTest_args struct)</span> <span class="keyword">throws</span> org.apache.thrift.TException </span>&#123;</span><br><span class="line">        org.apache.thrift.protocol.TField schemeField;</span><br><span class="line">        iprot.readStructBegin();</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>)</span><br><span class="line">        &#123;</span><br><span class="line">          schemeField = iprot.readFieldBegin();</span><br><span class="line">          <span class="keyword">if</span> (schemeField.type == org.apache.thrift.protocol.TType.STOP) &#123; </span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">switch</span> (schemeField.id) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>: <span class="comment">// QRY_CODE</span></span><br><span class="line">              <span class="keyword">if</span> (schemeField.type == org.apache.thrift.protocol.TType.I32) &#123;</span><br><span class="line">                struct.qryCode = iprot.readI32();</span><br><span class="line">                struct.setQryCodeIsSet(<span class="keyword">true</span>);</span><br><span class="line">              &#125; <span class="keyword">else</span> &#123; </span><br><span class="line">                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);</span><br><span class="line">          &#125;</span><br><span class="line">          iprot.readFieldEnd();</span><br><span class="line">        &#125;</span><br><span class="line">        iprot.readStructEnd();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// check for required fields of primitive type, which can't be checked in the validate method</span></span><br><span class="line">        struct.validate();</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">(org.apache.thrift.protocol.TProtocol oprot, qryTest_args struct)</span> <span class="keyword">throws</span> org.apache.thrift.TException </span>&#123;</span><br><span class="line">        struct.validate();</span><br><span class="line"></span><br><span class="line">        oprot.writeStructBegin(STRUCT_DESC);</span><br><span class="line">        oprot.writeFieldBegin(QRY_CODE_FIELD_DESC);</span><br><span class="line">        oprot.writeI32(struct.qryCode);</span><br><span class="line">        oprot.writeFieldEnd();</span><br><span class="line">        oprot.writeFieldStop();</span><br><span class="line">        oprot.writeStructEnd();</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">qryTest_argsTupleSchemeFactory</span> <span class="keyword">implements</span> <span class="title">org</span>.<span class="title">apache</span>.<span class="title">thrift</span>.<span class="title">scheme</span>.<span class="title">SchemeFactory</span> </span>&#123;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> qryTest_argsTupleScheme <span class="title">getScheme</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> qryTest_argsTupleScheme();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">qryTest_argsTupleScheme</span> <span class="keyword">extends</span> <span class="title">org</span>.<span class="title">apache</span>.<span class="title">thrift</span>.<span class="title">scheme</span>.<span class="title">TupleScheme</span>&lt;<span class="title">qryTest_args</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">      <span class="meta">@Override</span></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">(org.apache.thrift.protocol.TProtocol prot, qryTest_args struct)</span> <span class="keyword">throws</span> org.apache.thrift.TException </span>&#123;</span><br><span class="line">        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;</span><br><span class="line">        java.util.BitSet optionals = <span class="keyword">new</span> java.util.BitSet();</span><br><span class="line">        <span class="keyword">if</span> (struct.isSetQryCode()) &#123;</span><br><span class="line">          optionals.set(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        oprot.writeBitSet(optionals, <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span> (struct.isSetQryCode()) &#123;</span><br><span class="line">          oprot.writeI32(struct.qryCode);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="meta">@Override</span></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(org.apache.thrift.protocol.TProtocol prot, qryTest_args struct)</span> <span class="keyword">throws</span> org.apache.thrift.TException </span>&#123;</span><br><span class="line">        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;</span><br><span class="line">        java.util.BitSet incoming = iprot.readBitSet(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span> (incoming.get(<span class="number">0</span>)) &#123;</span><br><span class="line">          struct.qryCode = iprot.readI32();</span><br><span class="line">          struct.setQryCodeIsSet(<span class="keyword">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> &lt;S extends org.apache.thrift.scheme.IScheme&gt; <span class="function">S <span class="title">scheme</span><span class="params">(org.apache.thrift.protocol.TProtocol proto)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">qryTest_result</span> <span class="keyword">implements</span> <span class="title">org</span>.<span class="title">apache</span>.<span class="title">thrift</span>.<span class="title">TBase</span>&lt;<span class="title">qryTest_result</span>, <span class="title">qryTest_result</span>.<span class="title">_Fields</span>&gt;, <span class="title">java</span>.<span class="title">io</span>.<span class="title">Serializable</span>, <span class="title">Cloneable</span>, <span class="title">Comparable</span>&lt;<span class="title">qryTest_result</span>&gt;   </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> org.apache.thrift.protocol.TStruct STRUCT_DESC = <span class="keyword">new</span> org.apache.thrift.protocol.TStruct(<span class="string">"qryTest_result"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = <span class="keyword">new</span> org.apache.thrift.protocol.TField(<span class="string">"success"</span>, org.apache.thrift.protocol.TType.STRUCT, (<span class="keyword">short</span>)<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = <span class="keyword">new</span> qryTest_resultStandardSchemeFactory();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = <span class="keyword">new</span> qryTest_resultTupleSchemeFactory();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> QryResult success; <span class="comment">// required</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">enum</span> _Fields implements org.apache.thrift.TFieldIdEnum &#123;</span><br><span class="line">      SUCCESS((<span class="keyword">short</span>)<span class="number">0</span>, <span class="string">"success"</span>);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> java.util.Map&lt;java.lang.String, _Fields&gt; byName = <span class="keyword">new</span> java.util.HashMap&lt;java.lang.String, _Fields&gt;();</span><br><span class="line"></span><br><span class="line">      <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (_Fields field : java.util.EnumSet.allOf(_Fields.class)) &#123;</span><br><span class="line">          byName.put(field.getFieldName(), field);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">/**</span></span><br><span class="line"><span class="comment">       * Find the _Fields constant that matches fieldId, or null if its not found.</span></span><br><span class="line"><span class="comment">       */</span></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> _Fields <span class="title">findByThriftId</span><span class="params">(<span class="keyword">int</span> fieldId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span>(fieldId) &#123;</span><br><span class="line">          <span class="keyword">case</span> <span class="number">0</span>: <span class="comment">// SUCCESS</span></span><br><span class="line">            <span class="keyword">return</span> SUCCESS;</span><br><span class="line">          <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">/**</span></span><br><span class="line"><span class="comment">       * Find the _Fields constant that matches fieldId, throwing an exception</span></span><br><span class="line"><span class="comment">       * if it is not found.</span></span><br><span class="line"><span class="comment">       */</span></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> _Fields <span class="title">findByThriftIdOrThrow</span><span class="params">(<span class="keyword">int</span> fieldId)</span> </span>&#123;</span><br><span class="line">        _Fields fields = findByThriftId(fieldId);</span><br><span class="line">        <span class="keyword">if</span> (fields == <span class="keyword">null</span>) <span class="keyword">throw</span> <span class="keyword">new</span> java.lang.IllegalArgumentException(<span class="string">"Field "</span> + fieldId + <span class="string">" doesn't exist!"</span>);</span><br><span class="line">        <span class="keyword">return</span> fields;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">/**</span></span><br><span class="line"><span class="comment">       * Find the _Fields constant that matches name, or null if its not found.</span></span><br><span class="line"><span class="comment">       */</span></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> _Fields <span class="title">findByName</span><span class="params">(java.lang.String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> byName.get(name);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">short</span> _thriftId;</span><br><span class="line">      <span class="keyword">private</span> <span class="keyword">final</span> java.lang.String _fieldName;</span><br><span class="line"></span><br><span class="line">      _Fields(<span class="keyword">short</span> thriftId, java.lang.String fieldName) &#123;</span><br><span class="line">        _thriftId = thriftId;</span><br><span class="line">        _fieldName = fieldName;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">short</span> <span class="title">getThriftFieldId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> _thriftId;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">public</span> java.lang.<span class="function">String <span class="title">getFieldName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> _fieldName;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// isset id assignments</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> java.util.Map&lt;_Fields, org.apache.thrift.meta_data.FieldMetaData&gt; metaDataMap;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">      java.util.Map&lt;_Fields, org.apache.thrift.meta_data.FieldMetaData&gt; tmpMap = <span class="keyword">new</span> java.util.EnumMap&lt;_Fields, org.apache.thrift.meta_data.FieldMetaData&gt;(_Fields.class);</span><br><span class="line">      tmpMap.put(_Fields.SUCCESS, <span class="keyword">new</span> org.apache.thrift.meta_data.FieldMetaData(<span class="string">"success"</span>, org.apache.thrift.TFieldRequirementType.DEFAULT, </span><br><span class="line">          <span class="keyword">new</span> org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, QryResult.class)));</span><br><span class="line">      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);</span><br><span class="line">      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(qryTest_result.class, metaDataMap);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">qryTest_result</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">qryTest_result</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">      QryResult success)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>();</span><br><span class="line">      <span class="keyword">this</span>.success = success;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Performs a deep copy on &lt;i&gt;other&lt;/i&gt;.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">qryTest_result</span><span class="params">(qryTest_result other)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (other.isSetSuccess()) &#123;</span><br><span class="line">        <span class="keyword">this</span>.success = <span class="keyword">new</span> QryResult(other.success);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> qryTest_result <span class="title">deepCopy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> qryTest_result(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">clear</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.success = <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> QryResult <span class="title">getSuccess</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">this</span>.success;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> qryTest_result <span class="title">setSuccess</span><span class="params">(QryResult success)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.success = success;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">unsetSuccess</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.success = <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** Returns true if field success is set (has been assigned a value) and false otherwise */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isSetSuccess</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">this</span>.success != <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSuccessIsSet</span><span class="params">(<span class="keyword">boolean</span> value)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (!value) &#123;</span><br><span class="line">        <span class="keyword">this</span>.success = <span class="keyword">null</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setFieldValue</span><span class="params">(_Fields field, java.lang.Object value)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">switch</span> (field) &#123;</span><br><span class="line">      <span class="keyword">case</span> SUCCESS:</span><br><span class="line">        <span class="keyword">if</span> (value == <span class="keyword">null</span>) &#123;</span><br><span class="line">          unsetSuccess();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          setSuccess((QryResult)value);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> java.lang.<span class="function">Object <span class="title">getFieldValue</span><span class="params">(_Fields field)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">switch</span> (field) &#123;</span><br><span class="line">      <span class="keyword">case</span> SUCCESS:</span><br><span class="line">        <span class="keyword">return</span> getSuccess();</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> java.lang.IllegalStateException();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isSet</span><span class="params">(_Fields field)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (field == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> java.lang.IllegalArgumentException();</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">switch</span> (field) &#123;</span><br><span class="line">      <span class="keyword">case</span> SUCCESS:</span><br><span class="line">        <span class="keyword">return</span> isSetSuccess();</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> java.lang.IllegalStateException();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(java.lang.Object that)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (that == <span class="keyword">null</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">      <span class="keyword">if</span> (that <span class="keyword">instanceof</span> qryTest_result)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.equals((qryTest_result)that);</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(qryTest_result that)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (that == <span class="keyword">null</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">this</span> == that)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">boolean</span> this_present_success = <span class="keyword">true</span> &amp;&amp; <span class="keyword">this</span>.isSetSuccess();</span><br><span class="line">      <span class="keyword">boolean</span> that_present_success = <span class="keyword">true</span> &amp;&amp; that.isSetSuccess();</span><br><span class="line">      <span class="keyword">if</span> (this_present_success || that_present_success) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!(this_present_success &amp;&amp; that_present_success))</span><br><span class="line">          <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">this</span>.success.equals(that.success))</span><br><span class="line">          <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">hashCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">int</span> hashCode = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">      hashCode = hashCode * <span class="number">8191</span> + ((isSetSuccess()) ? <span class="number">131071</span> : <span class="number">524287</span>);</span><br><span class="line">      <span class="keyword">if</span> (isSetSuccess())</span><br><span class="line">        hashCode = hashCode * <span class="number">8191</span> + success.hashCode();</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> hashCode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compareTo</span><span class="params">(qryTest_result other)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (!getClass().equals(other.getClass())) &#123;</span><br><span class="line">        <span class="keyword">return</span> getClass().getName().compareTo(other.getClass().getName());</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">int</span> lastComparison = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());</span><br><span class="line">      <span class="keyword">if</span> (lastComparison != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> lastComparison;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (isSetSuccess()) &#123;</span><br><span class="line">        lastComparison = org.apache.thrift.TBaseHelper.compareTo(<span class="keyword">this</span>.success, other.success);</span><br><span class="line">        <span class="keyword">if</span> (lastComparison != <span class="number">0</span>) &#123;</span><br><span class="line">          <span class="keyword">return</span> lastComparison;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> _Fields <span class="title">fieldForId</span><span class="params">(<span class="keyword">int</span> fieldId)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> _Fields.findByThriftId(fieldId);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(org.apache.thrift.protocol.TProtocol iprot)</span> <span class="keyword">throws</span> org.apache.thrift.TException </span>&#123;</span><br><span class="line">      scheme(iprot).read(iprot, <span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">(org.apache.thrift.protocol.TProtocol oprot)</span> <span class="keyword">throws</span> org.apache.thrift.TException </span>&#123;</span><br><span class="line">      scheme(oprot).write(oprot, <span class="keyword">this</span>);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> java.lang.<span class="function">String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      java.lang.StringBuilder sb = <span class="keyword">new</span> java.lang.StringBuilder(<span class="string">"qryTest_result("</span>);</span><br><span class="line">      <span class="keyword">boolean</span> first = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">      sb.append(<span class="string">"success:"</span>);</span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">this</span>.success == <span class="keyword">null</span>) &#123;</span><br><span class="line">        sb.append(<span class="string">"null"</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        sb.append(<span class="keyword">this</span>.success);</span><br><span class="line">      &#125;</span><br><span class="line">      first = <span class="keyword">false</span>;</span><br><span class="line">      sb.append(<span class="string">")"</span>);</span><br><span class="line">      <span class="keyword">return</span> sb.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">validate</span><span class="params">()</span> <span class="keyword">throws</span> org.apache.thrift.TException </span>&#123;</span><br><span class="line">      <span class="comment">// check for required fields</span></span><br><span class="line">      <span class="comment">// check for sub-struct validity</span></span><br><span class="line">      <span class="keyword">if</span> (success != <span class="keyword">null</span>) &#123;</span><br><span class="line">        success.validate();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">writeObject</span><span class="params">(java.io.ObjectOutputStream out)</span> <span class="keyword">throws</span> java.io.IOException </span>&#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        write(<span class="keyword">new</span> org.apache.thrift.protocol.TCompactProtocol(<span class="keyword">new</span> org.apache.thrift.transport.TIOStreamTransport(out)));</span><br><span class="line">      &#125; <span class="keyword">catch</span> (org.apache.thrift.TException te) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> java.io.IOException(te);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">readObject</span><span class="params">(java.io.ObjectInputStream in)</span> <span class="keyword">throws</span> java.io.IOException, java.lang.ClassNotFoundException </span>&#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        read(<span class="keyword">new</span> org.apache.thrift.protocol.TCompactProtocol(<span class="keyword">new</span> org.apache.thrift.transport.TIOStreamTransport(in)));</span><br><span class="line">      &#125; <span class="keyword">catch</span> (org.apache.thrift.TException te) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> java.io.IOException(te);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">qryTest_resultStandardSchemeFactory</span> <span class="keyword">implements</span> <span class="title">org</span>.<span class="title">apache</span>.<span class="title">thrift</span>.<span class="title">scheme</span>.<span class="title">SchemeFactory</span> </span>&#123;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> qryTest_resultStandardScheme <span class="title">getScheme</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> qryTest_resultStandardScheme();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">qryTest_resultStandardScheme</span> <span class="keyword">extends</span> <span class="title">org</span>.<span class="title">apache</span>.<span class="title">thrift</span>.<span class="title">scheme</span>.<span class="title">StandardScheme</span>&lt;<span class="title">qryTest_result</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(org.apache.thrift.protocol.TProtocol iprot, qryTest_result struct)</span> <span class="keyword">throws</span> org.apache.thrift.TException </span>&#123;</span><br><span class="line">        org.apache.thrift.protocol.TField schemeField;</span><br><span class="line">        iprot.readStructBegin();</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>)</span><br><span class="line">        &#123;</span><br><span class="line">          schemeField = iprot.readFieldBegin();</span><br><span class="line">          <span class="keyword">if</span> (schemeField.type == org.apache.thrift.protocol.TType.STOP) &#123; </span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">switch</span> (schemeField.id) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>: <span class="comment">// SUCCESS</span></span><br><span class="line">              <span class="keyword">if</span> (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) &#123;</span><br><span class="line">                struct.success = <span class="keyword">new</span> QryResult();</span><br><span class="line">                struct.success.read(iprot);</span><br><span class="line">                struct.setSuccessIsSet(<span class="keyword">true</span>);</span><br><span class="line">              &#125; <span class="keyword">else</span> &#123; </span><br><span class="line">                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);</span><br><span class="line">          &#125;</span><br><span class="line">          iprot.readFieldEnd();</span><br><span class="line">        &#125;</span><br><span class="line">        iprot.readStructEnd();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// check for required fields of primitive type, which can't be checked in the validate method</span></span><br><span class="line">        struct.validate();</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">(org.apache.thrift.protocol.TProtocol oprot, qryTest_result struct)</span> <span class="keyword">throws</span> org.apache.thrift.TException </span>&#123;</span><br><span class="line">        struct.validate();</span><br><span class="line"></span><br><span class="line">        oprot.writeStructBegin(STRUCT_DESC);</span><br><span class="line">        <span class="keyword">if</span> (struct.success != <span class="keyword">null</span>) &#123;</span><br><span class="line">          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);</span><br><span class="line">          struct.success.write(oprot);</span><br><span class="line">          oprot.writeFieldEnd();</span><br><span class="line">        &#125;</span><br><span class="line">        oprot.writeFieldStop();</span><br><span class="line">        oprot.writeStructEnd();</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">qryTest_resultTupleSchemeFactory</span> <span class="keyword">implements</span> <span class="title">org</span>.<span class="title">apache</span>.<span class="title">thrift</span>.<span class="title">scheme</span>.<span class="title">SchemeFactory</span> </span>&#123;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> qryTest_resultTupleScheme <span class="title">getScheme</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> qryTest_resultTupleScheme();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">qryTest_resultTupleScheme</span> <span class="keyword">extends</span> <span class="title">org</span>.<span class="title">apache</span>.<span class="title">thrift</span>.<span class="title">scheme</span>.<span class="title">TupleScheme</span>&lt;<span class="title">qryTest_result</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">      <span class="meta">@Override</span></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">(org.apache.thrift.protocol.TProtocol prot, qryTest_result struct)</span> <span class="keyword">throws</span> org.apache.thrift.TException </span>&#123;</span><br><span class="line">        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;</span><br><span class="line">        java.util.BitSet optionals = <span class="keyword">new</span> java.util.BitSet();</span><br><span class="line">        <span class="keyword">if</span> (struct.isSetSuccess()) &#123;</span><br><span class="line">          optionals.set(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        oprot.writeBitSet(optionals, <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span> (struct.isSetSuccess()) &#123;</span><br><span class="line">          struct.success.write(oprot);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="meta">@Override</span></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(org.apache.thrift.protocol.TProtocol prot, qryTest_result struct)</span> <span class="keyword">throws</span> org.apache.thrift.TException </span>&#123;</span><br><span class="line">        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;</span><br><span class="line">        java.util.BitSet incoming = iprot.readBitSet(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span> (incoming.get(<span class="number">0</span>)) &#123;</span><br><span class="line">          struct.success = <span class="keyword">new</span> QryResult();</span><br><span class="line">          struct.success.read(iprot);</span><br><span class="line">          struct.setSuccessIsSet(<span class="keyword">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> &lt;S extends org.apache.thrift.scheme.IScheme&gt; <span class="function">S <span class="title">scheme</span><span class="params">(org.apache.thrift.protocol.TProtocol proto)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="导入maven工程并修改jdk"><a href="#导入maven工程并修改jdk" class="headerlink" title="导入maven工程并修改jdk"></a>导入maven工程并修改jdk</h4><ul><li>将生成的java文件放入建立的maven工程对应包com.thrift中</li><li>由于thrift自动生成的文件中带有<code>@override</code>，需jdk版本在1.6及以上才可以兼容。所以需要修改工程使用的jdk版本号<ul><li>Project -&gt; Properties</li><li>Java Compiler -&gt; Compiler compliance level: [修改为1.7]</li><li>刷新工程（F5或右键Refresh）</li></ul></li></ul><h3 id="实现非阻塞I-O，二进制传输协议的C-S"><a href="#实现非阻塞I-O，二进制传输协议的C-S" class="headerlink" title="实现非阻塞I/O，二进制传输协议的C/S"></a>实现非阻塞I/O，二进制传输协议的C/S</h3><h4 id="编写java接口文件"><a href="#编写java接口文件" class="headerlink" title="编写java接口文件"></a>编写java接口文件</h4><ul><li>由于thrift文件本身没有接口，所以需要编写QueryImp.java</li></ul><h5 id="QueryImp-java"><a href="#QueryImp-java" class="headerlink" title="QueryImp.java"></a>QueryImp.java</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">package com.thrift;</span><br><span class="line"></span><br><span class="line">import org.apache.thrift.TException;</span><br><span class="line"></span><br><span class="line">public class QueryImp implements TestQry.Iface&#123;</span><br><span class="line">@Override</span><br><span class="line">public QryResult qryTest(int qryCode) throws TException &#123;</span><br><span class="line">   QryResult result = new QryResult();</span><br><span class="line">   if(qryCode==1)&#123;</span><br><span class="line">     result.code = 1;</span><br><span class="line">     result.msg = &quot;success&quot;;</span><br><span class="line">   &#125;else&#123;</span><br><span class="line">     result.code = 0;</span><br><span class="line">     result.msg = &quot;fail&quot;;</span><br><span class="line">   &#125;</span><br><span class="line">   return result;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="编写Service端及Client端java"><a href="#编写Service端及Client端java" class="headerlink" title="编写Service端及Client端java"></a>编写Service端及Client端java</h4><h5 id="thriftServer-java"><a href="#thriftServer-java" class="headerlink" title="thriftServer.java"></a>thriftServer.java</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.thrift;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.thrift.TProcessorFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.thrift.protocol.TBinaryProtocol;</span><br><span class="line"><span class="keyword">import</span> org.apache.thrift.server.TNonblockingServer;</span><br><span class="line"><span class="keyword">import</span> org.apache.thrift.server.TServer;</span><br><span class="line"><span class="keyword">import</span> org.apache.thrift.transport.TFramedTransport;</span><br><span class="line"><span class="keyword">import</span> org.apache.thrift.transport.TNonblockingServerSocket;</span><br><span class="line"><span class="keyword">import</span> org.apache.thrift.transport.TTransportException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">thriftServer</span> </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="keyword">int</span> DEFAULT_PORT = <span class="number">30001</span>;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> TServer server = <span class="keyword">null</span>;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      TNonblockingServerSocket socket = <span class="keyword">new</span> TNonblockingServerSocket(DEFAULT_PORT);</span><br><span class="line">      <span class="meta">@SuppressWarnings</span>(&#123; <span class="string">"rawtypes"</span>, <span class="string">"unchecked"</span> &#125;)</span><br><span class="line">  TestQry.Processor processor = <span class="keyword">new</span> TestQry.Processor(<span class="keyword">new</span> QueryImp());</span><br><span class="line">      TNonblockingServer.Args arg = <span class="keyword">new</span> TNonblockingServer.Args(socket);</span><br><span class="line">      arg.protocolFactory(<span class="keyword">new</span> TBinaryProtocol.Factory());</span><br><span class="line">      arg.transportFactory(<span class="keyword">new</span> TFramedTransport.Factory());</span><br><span class="line">      arg.processorFactory(<span class="keyword">new</span> TProcessorFactory(processor));</span><br><span class="line">      server = <span class="keyword">new</span> TNonblockingServer (arg);</span><br><span class="line">      server.serve();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (TTransportException e) &#123;</span><br><span class="line">      e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="thriftClient-java"><a href="#thriftClient-java" class="headerlink" title="thriftClient.java"></a>thriftClient.java</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.thrift;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.thrift.protocol.TBinaryProtocol;</span><br><span class="line"><span class="keyword">import</span> org.apache.thrift.protocol.TProtocol;</span><br><span class="line"><span class="keyword">import</span> org.apache.thrift.transport.TFramedTransport;</span><br><span class="line"><span class="keyword">import</span> org.apache.thrift.transport.TSocket;</span><br><span class="line"><span class="keyword">import</span> org.apache.thrift.transport.TTransport;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">thriftClient</span> </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="keyword">int</span> DEFAULT_QRY_CODE = <span class="number">1</span>;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      TTransport tTransport = getTTransport();</span><br><span class="line">      TProtocol protocol = <span class="keyword">new</span> TBinaryProtocol(tTransport);</span><br><span class="line">      TestQry.Client client = <span class="keyword">new</span> TestQry.Client(protocol);</span><br><span class="line">      QryResult result = client.qryTest(DEFAULT_QRY_CODE);</span><br><span class="line">      System.out.println(<span class="string">"code="</span>+result.code+<span class="string">" msg="</span>+result.msg);</span><br><span class="line">    &#125;<span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">      e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> TTransport <span class="title">getTTransport</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    <span class="keyword">try</span>&#123;</span><br><span class="line">      TTransport tTransport = getTTransport(<span class="string">"127.0.0.1"</span>, <span class="number">30001</span>, <span class="number">5000</span>);</span><br><span class="line">      <span class="keyword">if</span>(!tTransport.isOpen())&#123;</span><br><span class="line">        tTransport.open();</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> tTransport;</span><br><span class="line">    &#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">      e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> TTransport <span class="title">getTTransport</span><span class="params">(String host, <span class="keyword">int</span> port, <span class="keyword">int</span> timeout)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> TSocket tSocket = <span class="keyword">new</span> TSocket(host, port, timeout);</span><br><span class="line">    <span class="keyword">final</span> TTransport transport = <span class="keyword">new</span> TFramedTransport(tSocket);</span><br><span class="line">    <span class="keyword">return</span> transport;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="结果验证"><a href="#结果验证" class="headerlink" title="结果验证"></a>结果验证</h4><ul><li>首先运行Server端，未出现任何console输出</li><li>其次运行Client端，发现Client端出现正确结果输出</li></ul><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Received <span class="number">1</span></span><br><span class="line">code=<span class="number">1</span> msg=success</span><br></pre></td></tr></table></figure><h2 id="问题解决（乱序不全-）"><a href="#问题解决（乱序不全-）" class="headerlink" title="问题解决（乱序不全=-=）"></a>问题解决（乱序不全=-=）</h2><h3 id="运行server代码时，出现SLF4J如下输出"><a href="#运行server代码时，出现SLF4J如下输出" class="headerlink" title="运行server代码时，出现SLF4J如下输出"></a>运行server代码时，出现SLF4J如下输出</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">SLF4J: <span class="title">Failed</span> <span class="title">to</span> <span class="title">load</span> <span class="title">class</span> "<span class="title">org.slf4j.impl.StaticLoggerBinder</span>".  </span></span><br><span class="line"><span class="function"><span class="title">SLF4J</span>: <span class="title">Defaulting</span> <span class="title">to</span> <span class="title">no</span>-<span class="title">operation</span> (<span class="title">NOP</span>) <span class="title">logger</span> <span class="title">implementation</span>  </span></span><br><span class="line"><span class="function"><span class="title">SLF4J</span>: <span class="title">See</span> <span class="title">http</span>://<span class="title">www.slf4j.org</span>/<span class="title">codes.html</span>#<span class="title">StaticLoggerBinder</span> <span class="title">for</span> <span class="title">further</span> <span class="title">details</span>.</span></span><br></pre></td></tr></table></figure><ul><li>未添加slf4j-simple的jar包依赖，在pom.xml文件中加入以下dependency</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-simple<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.25<span class="tag">&lt;/<span class="name">version</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="override"><a href="#override" class="headerlink" title="@override"></a>@override</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>修改工程使用的jdk版本号<ul><li>Project -&gt; Properties</li><li>Java Compiler -&gt; Compiler compliance level: [修改为1.7]</li><li>刷新工程（F5或右键Refresh）</li></ul></li></ul><h3 id="运行server端口后，发现无法创建socket通信"><a href="#运行server端口后，发现无法创建socket通信" class="headerlink" title="运行server端口后，发现无法创建socket通信"></a>运行server端口后，发现无法创建socket通信</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WARN org.apache.thrift.transport.TTransportException: Could <span class="keyword">not</span> create ServerSocket on address <span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>/<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>:<span class="number">30001</span>.</span><br></pre></td></tr></table></figure><ul><li>在cmd中使用<code>netstat -a</code>命令查看所有端口占用情况，若有30001则可选择其他未占用端口，或关闭当前使用30001的进程通信</li></ul><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="http://www.cnblogs.com/cyfonly/p/6059374.html" target="_blank" rel="noopener">和 Thrift 的一场美丽邂逅</a></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Thrift 是 IDL 描述性语言的一个具体实现，最初是由 Facebook 开发用做系统内各语言之间的 RPC 通信的一个可扩展且跨语言的软件框架。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Thrift" scheme="http://meow0v0.github.io/categories/Thrift/"/>
    
    
      <category term="Thrift" scheme="http://meow0v0.github.io/tags/Thrift/"/>
    
      <category term="maven" scheme="http://meow0v0.github.io/tags/maven/"/>
    
      <category term="java" scheme="http://meow0v0.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>ActiveMQ基础</title>
    <link href="http://meow0v0.github.io/2018/04/11/ActiveMQ%E5%9F%BA%E7%A1%80/"/>
    <id>http://meow0v0.github.io/2018/04/11/ActiveMQ基础/</id>
    <published>2018-04-11T01:42:32.000Z</published>
    <updated>2018-04-11T01:53:59.531Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ActiveMQ"><a href="#ActiveMQ" class="headerlink" title="ActiveMQ"></a>ActiveMQ</h1><a id="more"></a><h1 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h1><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p><a href="https://my.oschina.net/xiaoxishan/blog/378743" target="_blank" rel="noopener">ActiveMQ学习笔记(1)——JMS的概念</a></p><p><a href="https://my.oschina.net/xiaoxishan/blog/378752" target="_blank" rel="noopener">ActiveMQ学习笔记(2)——JMS消息模型</a></p><h3 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h3><p><a href="https://my.oschina.net/xiaoxishan/blog/380352" target="_blank" rel="noopener">ActiveMQ学习笔记(3)——ActiveMQ的安装</a></p><h3 id="基本实现"><a href="#基本实现" class="headerlink" title="基本实现"></a>基本实现</h3><p><a href="https://my.oschina.net/xiaoxishan/blog/380446" target="_blank" rel="noopener">ActiveMQ学习笔记(4)——通过ActiveMQ收发消息</a></p><h1 id="java具体实现类"><a href="#java具体实现类" class="headerlink" title="java具体实现类"></a>java具体实现类</h1><h3 id="——Session——"><a href="#——Session——" class="headerlink" title="——Session——"></a>——Session——</h3><h4 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h4><ul><li>P：生产者</li><li>C：消费者</li><li>服务端：P / ActiveMQ Service</li><li>客户端：ActiveMQ Service / C</li></ul><h4 id="接受消息"><a href="#接受消息" class="headerlink" title="接受消息"></a>接受消息</h4><ul><li>流程<ul><li>客户端接收消息</li><li>客户端处理消息</li><li>消息被签收（标志——客户端成功接收消息）<a href="https://blog.csdn.net/lulongzhou_llz/article/details/42270113" target="_blank" rel="noopener">ActiveMQ讯息传送机制以及ACK机制</a></li></ul></li></ul><h4 id="消息签收-ACK-MODE"><a href="#消息签收-ACK-MODE" class="headerlink" title="消息签收 - ACK_MODE"></a>消息签收 - ACK_MODE</h4><ul><li>不带事务的Session<ul><li><strong>Session.AUTO_ACKNOWLEDGE</strong>（1 自动确认）：当客户端从receive()或onMessage()成功返回时，Session自动签收客户端的消息。</li><li><strong>Session.CLIENT_ACKNOWLEDGE</strong>（2 客户端确认）：客户端需调用消息的acknowledge方法签收消息。</li><li><strong>Session.DUPS_OK_ACKNOWLEDGE</strong>（3 自动批量确认）：不是必须签收，消息可能重复发送。第二次重传时，消息头的JmsDelivered置为true，表示当前消息已传送过一次，客户端需进行重复处理控制。</li><li><strong>Session.INDIVIDUAL_ACKNOWLEDGE</strong>（4 单条消息确认）：</li></ul></li><li>带事务的Session<ul><li><strong>Session.SESSION_TRANSACTED</strong>（0 事务提交并确认）：<ul><li>提交时，客户端自动签收消息。</li><li><strong>事务回滚时</strong>，所有已经接收的消息会<strong>再次发送</strong>。</li></ul></li></ul></li></ul><h4 id="消息签收-ACK-TYPE"><a href="#消息签收-ACK-TYPE" class="headerlink" title="消息签收 - ACK_TYPE"></a>消息签收 - ACK_TYPE</h4><ul><li>MessageAck类中定义。客户端在不同ACK_MODE时，在不同时机发送ACK指令。</li><li>ACK_TYPE<ul><li><strong>DELIVERED_ACK_TYPE</strong>（0）：消息”已接收”，但尚未处理结束</li><li><strong>STANDARD_ACK_TYPE</strong>（2）： “标准”类型,通常表示为消息”处理成功”，broker端可以删除消息了</li><li><strong>POSION_ACK_TYPE</strong> （1）：消息”错误”,通常表示”抛弃”此消息。如消息重发多次仍无法正确处理，消息将被删除或者DLQ(死信队列)</li><li><strong>REDELIVERED_ACK_TYPE</strong>（3）：消息需”重发”，比如consumer处理消息时抛出了异常，broker稍后会重新发送此消息</li><li><strong>INDIVIDUAL_ACK_TYPE</strong>（4）：表示只确认”单条消息”,无论在任何ACK_MODE下    </li><li><strong>UNMATCHED_ACK_TYPE</strong>（5）：BROKER间转发消息时,接收端”拒绝”消息</li></ul></li></ul><h4 id="Session设置"><a href="#Session设置" class="headerlink" title="Session设置"></a>Session设置</h4><table><thead><tr><th style="text-align:center">模式</th><th style="text-align:center">服务端</th><th style="text-align:center">客户端</th><th style="text-align:center">AUTO_*</th><th style="text-align:center">CLIENT_*</th><th style="text-align:center">备注</th></tr></thead><tbody><tr><td style="text-align:center">生产者</td><td style="text-align:center">P</td><td style="text-align:center">ActiveMQ<br>Service</td><td style="text-align:center">√</td><td style="text-align:center">√</td><td style="text-align:center">区别不大</td></tr><tr><td style="text-align:center">消费者</td><td style="text-align:center">ActiveMQ<br>Service</td><td style="text-align:center">C</td><td style="text-align:center">收到即签收，忽略处理正确性</td><td style="text-align:center">需手动acknowledge</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">P &amp; C</td><td style="text-align:center">P</td><td style="text-align:center">C</td><td style="text-align:center">√</td><td style="text-align:center">√</td><td style="text-align:center">没有区别</td></tr></tbody></table><h3 id="——Consumer——"><a href="#——Consumer——" class="headerlink" title="——Consumer——"></a>——Consumer——</h3><h4 id="获取消息"><a href="#获取消息" class="headerlink" title="获取消息"></a>获取消息</h4><ul><li><p>获取方式</p><ul><li>Push：消息中间件主动将消息推给消费者。（尽可能快，但消费者缓冲区可能溢出）</li><li>Pull：消费者主动从消息中间件拉取消息。（增加消息延迟，消息到消费者慢）</li></ul></li><li><p><strong>Perfetch limit</strong></p><ul><li><p>规定一次可以向消费者Push的消息数（消息预取值）</p><p>推送消息数 = perfetch limit时，若消费者未返回ACK，则消息中间件不再继续推送消息。</p></li><li><p><strong>perfetch limit = 0</strong>：Pull方式，消费者主动从消息中间件拉取消息。receive()先发送PULL指令并阻塞，直到broker端返回消息为止。消息只能逐个获取。</p></li><li><p><strong>prefetch limit &gt; 0</strong>：broker会批量PUSH给客户端一定数量(&lt;=prefetch)消息，客户端将未消费的消息放入本地队列中，队列中有消息则receive方法会立即返回。一定数量ACK后broker端将继续批量PUSH给客户端。异步方式必须&gt;0（中间件不主动push消息，消费者不被动获取消息）</p></li></ul></li><li><p><strong>Optimized Acknowledge</strong></p><ul><li>true：prefetch &gt; 0，单条确认</li><li>false：prefetch &gt;= 0，批量确认（延迟确认）</li></ul></li></ul><ul><li>同步方式：Message ActiveMQMesasageConsumer.<strong>receive</strong>()<ul><li>receive()：无限阻塞，直至有消息产生</li><li>receive(long timeout)：获取下一个消息，导致一段时间阻塞，直至新消息或超时。超时则返回null。</li><li>receiveNoWait()：获取下一个消息，不会阻塞。若没有下一个消息则直接返回null。</li></ul></li><li>异步方式：<strong>void</strong> <strong>setMessageListener(MessageListener)</strong><ul><li>​</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;ActiveMQ&quot;&gt;&lt;a href=&quot;#ActiveMQ&quot; class=&quot;headerlink&quot; title=&quot;ActiveMQ&quot;&gt;&lt;/a&gt;ActiveMQ&lt;/h1&gt;
    
    </summary>
    
    
      <category term="ActiveMQ" scheme="http://meow0v0.github.io/tags/ActiveMQ/"/>
    
      <category term="Java" scheme="http://meow0v0.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>ActiveMQ基本实现</title>
    <link href="http://meow0v0.github.io/2018/04/11/ActiveMQ%E5%9F%BA%E6%9C%AC%E5%AE%9E%E7%8E%B0/"/>
    <id>http://meow0v0.github.io/2018/04/11/ActiveMQ基本实现/</id>
    <published>2018-04-11T01:38:58.000Z</published>
    <updated>2018-04-11T01:54:08.452Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基本实现代码"><a href="#基本实现代码" class="headerlink" title="基本实现代码"></a>基本实现代码</h1><a id="more"></a><h2 id="Queue"><a href="#Queue" class="headerlink" title="Queue"></a>Queue</h2><h3 id="Producer"><a href="#Producer" class="headerlink" title="Producer"></a>Producer</h3><ul><li>package &amp; import</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> queue;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.jms.Connection;</span><br><span class="line"><span class="keyword">import</span> javax.jms.ConnectionFactory;</span><br><span class="line"><span class="keyword">import</span> javax.jms.Destination;</span><br><span class="line"><span class="keyword">import</span> javax.jms.JMSException;</span><br><span class="line"><span class="keyword">import</span> javax.jms.MessageProducer;</span><br><span class="line"><span class="keyword">import</span> javax.jms.Session;</span><br><span class="line"><span class="keyword">import</span> javax.jms.TextMessage;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.activemq.ActiveMQConnection;</span><br><span class="line"><span class="keyword">import</span> org.apache.activemq.ActiveMQConnectionFactory;</span><br></pre></td></tr></table></figure><ul><li>class</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Producer</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Producer producter = <span class="keyword">new</span> Producer();</span><br><span class="line">String msg = <span class="string">"meow!"</span>;</span><br><span class="line">producter.sendMessage(msg);</span><br><span class="line">System.out.println(<span class="string">"消息发送结束："</span> + msg);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendMessage</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line">String user = ActiveMQConnection.DEFAULT_USER;</span><br><span class="line">String password = ActiveMQConnection.DEFAULT_PASSWORD;</span><br><span class="line">String url = ActiveMQConnection.DEFAULT_BROKER_URL;</span><br><span class="line">String subject = <span class="string">"test"</span>;</span><br><span class="line">ConnectionFactory contectionFactory = <span class="keyword">new</span> ActiveMQConnectionFactory(user, password, url);</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">Connection connection = contectionFactory.createConnection();</span><br><span class="line">connection.start();</span><br><span class="line">Session session = connection.createSession(Boolean.TRUE, Session.AUTO_ACKNOWLEDGE);</span><br><span class="line">Destination destination = session.createQueue(subject);</span><br><span class="line">MessageProducer producer = session.createProducer(destination);</span><br><span class="line">TextMessage message = session.createTextMessage();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">String tmp = i + <span class="string">":"</span> + msg;</span><br><span class="line">message.setText(tmp + <span class="string">"(Text)"</span>);</span><br><span class="line">message.setStringProperty(<span class="string">"hello"</span>, tmp);</span><br><span class="line">producer.send(message);</span><br><span class="line">System.out.println(<span class="string">"Send: "</span> + tmp);</span><br><span class="line">Thread.sleep(<span class="number">3000</span>);</span><br><span class="line">session.commit();</span><br><span class="line">&#125;</span><br><span class="line">session.close();</span><br><span class="line">connection.close();</span><br><span class="line">&#125; <span class="keyword">catch</span>(JMSException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">catch</span>(InterruptedException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Consumer（同步接收）"><a href="#Consumer（同步接收）" class="headerlink" title="Consumer（同步接收）"></a>Consumer（同步接收）</h3><ul><li>package &amp; import</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> queue;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.jms.Connection;</span><br><span class="line"><span class="keyword">import</span> javax.jms.ConnectionFactory;</span><br><span class="line"><span class="keyword">import</span> javax.jms.Destination;</span><br><span class="line"><span class="keyword">import</span> javax.jms.JMSException;</span><br><span class="line"><span class="keyword">import</span> javax.jms.Message;</span><br><span class="line"><span class="keyword">import</span> javax.jms.MessageConsumer;</span><br><span class="line"><span class="keyword">import</span> javax.jms.Session;</span><br><span class="line"><span class="keyword">import</span> javax.jms.TextMessage;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.activemq.ActiveMQConnection;</span><br><span class="line"><span class="keyword">import</span> org.apache.activemq.ActiveMQConnectionFactory;</span><br></pre></td></tr></table></figure><ul><li>class</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Consumer</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">String user = ActiveMQConnection.DEFAULT_USER;</span><br><span class="line">String password = ActiveMQConnection.DEFAULT_PASSWORD;</span><br><span class="line">String url = ActiveMQConnection.DEFAULT_BROKER_URL;</span><br><span class="line">String subject = <span class="string">"test"</span>;</span><br><span class="line">ConnectionFactory connectionFactory = <span class="keyword">new</span> ActiveMQConnectionFactory(user, password, url);</span><br><span class="line">Connection connection = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123; </span><br><span class="line">connection = connectionFactory.createConnection();</span><br><span class="line">connection.start();</span><br><span class="line">Session session = connection.createSession(Boolean.FALSE, Session.AUTO_ACKNOWLEDGE);</span><br><span class="line">Destination destination = session.createQueue(subject);</span><br><span class="line">MessageConsumer consumer = session.createConsumer(destination);</span><br><span class="line"><span class="keyword">long</span> timeout = <span class="number">10</span> * <span class="number">1000</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="keyword">true</span>) &#123;</span><br><span class="line">Message message = consumer.receive(timeout);</span><br><span class="line"><span class="keyword">if</span>(message == <span class="keyword">null</span>) <span class="keyword">break</span>;</span><br><span class="line">String text = ((TextMessage) message).getText();</span><br><span class="line">System.out.println(<span class="string">"Received： "</span> + text);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span>(JMSException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(connection != <span class="keyword">null</span>) &#123;</span><br><span class="line">connection.close();</span><br><span class="line">System.out.println(<span class="string">"消息接收结束！"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (Throwable ignore)&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Listener（异步接收）"><a href="#Listener（异步接收）" class="headerlink" title="Listener（异步接收）"></a>Listener（异步接收）</h3><ul><li>package &amp; import</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> queue;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.jms.Connection;</span><br><span class="line"><span class="keyword">import</span> javax.jms.ConnectionFactory;</span><br><span class="line"><span class="keyword">import</span> javax.jms.Destination;</span><br><span class="line"><span class="keyword">import</span> javax.jms.JMSException;</span><br><span class="line"><span class="keyword">import</span> javax.jms.Message;</span><br><span class="line"><span class="keyword">import</span> javax.jms.MessageConsumer;</span><br><span class="line"><span class="keyword">import</span> javax.jms.MessageListener;</span><br><span class="line"><span class="keyword">import</span> javax.jms.Session;</span><br><span class="line"><span class="keyword">import</span> javax.jms.TextMessage;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.activemq.ActiveMQConnection;</span><br><span class="line"><span class="keyword">import</span> org.apache.activemq.ActiveMQConnectionFactory;</span><br></pre></td></tr></table></figure><ul><li>class</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Listener</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">String user = ActiveMQConnection.DEFAULT_USER;</span><br><span class="line">String password = ActiveMQConnection.DEFAULT_PASSWORD;</span><br><span class="line">String url = ActiveMQConnection.DEFAULT_BROKER_URL;</span><br><span class="line">String subject = <span class="string">"test"</span>;</span><br><span class="line">ConnectionFactory connectionFactory = <span class="keyword">new</span> ActiveMQConnectionFactory(user, password, url);</span><br><span class="line">Connection connection;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">connection = connectionFactory.createConnection();</span><br><span class="line">connection.start();</span><br><span class="line"><span class="keyword">final</span> Session session = connection.createSession(Boolean.TRUE, Session.AUTO_ACKNOWLEDGE);</span><br><span class="line">Destination destination = session.createQueue(subject);</span><br><span class="line">MessageConsumer consumer = session.createConsumer(destination);</span><br><span class="line">consumer.setMessageListener(<span class="keyword">new</span> MessageListener()&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onMessage</span><span class="params">(Message msg)</span> </span>&#123;</span><br><span class="line">TextMessage message = (TextMessage) msg;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">String hello = message.getStringProperty(<span class="string">"hello"</span>);</span><br><span class="line">System.out.println(<span class="string">"Received：\t"</span> + hello);</span><br><span class="line">session.commit();</span><br><span class="line">&#125; <span class="keyword">catch</span>(JMSException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">session.close();</span><br><span class="line">connection.close();</span><br><span class="line">&#125; <span class="keyword">catch</span>(JMSException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>waitInput（暂停退出）（未验证代码正确性）</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">waitInput</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="meta">@SuppressWarnings</span>(<span class="string">"resource"</span>)</span><br><span class="line">java.util.Scanner scanner = <span class="keyword">new</span> java.util.Scanner(System.in);</span><br><span class="line">System.out.println(<span class="string">"按Enter键退出："</span>);</span><br><span class="line">String next = scanner.nextLine();</span><br><span class="line"><span class="keyword">return</span> next;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Topic（未验证）"><a href="#Topic（未验证）" class="headerlink" title="Topic（未验证）"></a>Topic（未验证）</h2><h3 id="Publisher"><a href="#Publisher" class="headerlink" title="Publisher"></a>Publisher</h3><ul><li>package &amp; import</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> topic;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.jms.Connection;</span><br><span class="line"><span class="keyword">import</span> javax.jms.ConnectionFactory;</span><br><span class="line"><span class="keyword">import</span> javax.jms.JMSException;</span><br><span class="line"><span class="keyword">import</span> javax.jms.Destination;</span><br><span class="line"><span class="keyword">import</span> javax.jms.MessageProducer;</span><br><span class="line"><span class="keyword">import</span> javax.jms.Session;</span><br><span class="line"><span class="keyword">import</span> javax.jms.TextMessage;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.activemq.ActiveMQConnection;</span><br><span class="line"><span class="keyword">import</span> org.apache.activemq.ActiveMQConnectionFactory;</span><br></pre></td></tr></table></figure><ul><li>class</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Publisher</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Publisher pb = <span class="keyword">new</span> Publisher();</span><br><span class="line">String msg = <span class="string">"Hello meow!"</span>;</span><br><span class="line">pb.sendMessage(msg);</span><br><span class="line">System.out.println(<span class="string">"消息发送结束："</span> + msg);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendMessage</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line">String user = ActiveMQConnection.DEFAULT_USER;</span><br><span class="line">String password = ActiveMQConnection.DEFAULT_PASSWORD;</span><br><span class="line">String url = ActiveMQConnection.DEFAULT_BROKER_URL;</span><br><span class="line">String subject = <span class="string">"MQ.TOPIC"</span>;</span><br><span class="line">ConnectionFactory contectionFactory = <span class="keyword">new</span> ActiveMQConnectionFactory(user, password, url);</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">Connection connection = contectionFactory.createConnection();</span><br><span class="line">connection.start();</span><br><span class="line">Session session = connection.createSession(Boolean.TRUE, Session.AUTO_ACKNOWLEDGE);</span><br><span class="line">Destination destination = session.createTopic(subject);</span><br><span class="line">MessageProducer producer = session.createProducer(destination);</span><br><span class="line">TextMessage message = session.createTextMessage();</span><br><span class="line">message.setStringProperty(<span class="string">"hello"</span>, msg);</span><br><span class="line">producer.send(message);</span><br><span class="line">session.commit();</span><br><span class="line">session.close();</span><br><span class="line">connection.close();</span><br><span class="line">&#125; <span class="keyword">catch</span>(JMSException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Subscriber"><a href="#Subscriber" class="headerlink" title="Subscriber"></a>Subscriber</h3><ul><li>package &amp; import</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> topic;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.jms.Connection;</span><br><span class="line"><span class="keyword">import</span> javax.jms.ConnectionFactory;</span><br><span class="line"><span class="keyword">import</span> javax.jms.JMSException;</span><br><span class="line"><span class="keyword">import</span> javax.jms.Message;</span><br><span class="line"><span class="keyword">import</span> javax.jms.MessageConsumer;</span><br><span class="line"><span class="keyword">import</span> javax.jms.MessageListener;</span><br><span class="line"><span class="keyword">import</span> javax.jms.Session;</span><br><span class="line"><span class="keyword">import</span> javax.jms.TextMessage;</span><br><span class="line"><span class="keyword">import</span> javax.jms.Topic;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.activemq.ActiveMQConnection;</span><br><span class="line"><span class="keyword">import</span> org.apache.activemq.ActiveMQConnectionFactory;</span><br></pre></td></tr></table></figure><ul><li>class</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Subscriber</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">String user = ActiveMQConnection.DEFAULT_USER;</span><br><span class="line">String password = ActiveMQConnection.DEFAULT_PASSWORD;</span><br><span class="line">String url = ActiveMQConnection.DEFAULT_BROKER_URL;</span><br><span class="line">String subject = <span class="string">"MQ.TOPIC"</span>;</span><br><span class="line">ConnectionFactory connectionFactory = <span class="keyword">new</span> ActiveMQConnectionFactory(user, password, url);</span><br><span class="line">Connection connection;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">connection = connectionFactory.createConnection();</span><br><span class="line">connection.start();</span><br><span class="line"><span class="keyword">final</span> Session session = connection.createSession(Boolean.TRUE, Session.AUTO_ACKNOWLEDGE);</span><br><span class="line">Topic topic = session.createTopic(subject);</span><br><span class="line">MessageConsumer consumer = session.createConsumer(topic);</span><br><span class="line">consumer.setMessageListener(<span class="keyword">new</span> MessageListener()&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onMessage</span><span class="params">(Message msg)</span> </span>&#123;</span><br><span class="line">TextMessage message = (TextMessage) msg;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">String hello = message.getStringProperty(<span class="string">"hello"</span>);</span><br><span class="line">System.out.println(<span class="string">"Subscriber-SecondSubscriber-Received：\t"</span> + hello);</span><br><span class="line">session.commit();</span><br><span class="line">&#125; <span class="keyword">catch</span>(JMSException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">session.close();</span><br><span class="line">connection.close();</span><br><span class="line">&#125; <span class="keyword">catch</span> (JMSException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;基本实现代码&quot;&gt;&lt;a href=&quot;#基本实现代码&quot; class=&quot;headerlink&quot; title=&quot;基本实现代码&quot;&gt;&lt;/a&gt;基本实现代码&lt;/h1&gt;
    
    </summary>
    
    
      <category term="ActiveMQ" scheme="http://meow0v0.github.io/tags/ActiveMQ/"/>
    
      <category term="Java" scheme="http://meow0v0.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Hexo + GitHub Pages (一) 个人主页搭建</title>
    <link href="http://meow0v0.github.io/2018/04/06/Hexo-Github-Pages%20(%E4%B8%80)%20%E4%B8%AA%E4%BA%BA%E4%B8%BB%E9%A1%B5%E6%90%AD%E5%BB%BA/"/>
    <id>http://meow0v0.github.io/2018/04/06/Hexo-Github-Pages (一) 个人主页搭建/</id>
    <published>2018-04-06T06:04:08.000Z</published>
    <updated>2018-04-11T05:55:28.173Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文讲述在Github上通过GitHub Pages搭建个人博客过程。</p></blockquote><a id="more"></a><blockquote><p><a href="https://pages.github.com/" target="_blank" rel="noopener">GitHub Pages</a>为Github项目，提供免费的个人主页或博客网站，亦可绑定个人域名使用。通过Jekyll静态页面转换引擎实现模板的自动转换。</p></blockquote><h1 id="Github-Pages"><a href="#Github-Pages" class="headerlink" title="Github Pages"></a>Github Pages</h1><h2 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h2><ul><li><p>在Github个人首页上选择 New repository，或点击<a href="https://github.com/new" target="_blank" rel="noopener">新建仓库</a>，新建仓库。</p><ul><li>Repository name：填入xxx.github.io（xxx为github用户名），格式固定才可访问</li><li>Description：可选项，为仓库项目描述</li><li>Public / Private：选择Public</li><li>README：可勾选预初始化，gitignore选择java，license选择GNU General Public License v2.0</li></ul><p>随后点击Create Repository。</p></li></ul><ul><li><p>进入仓库的Setting并看到GitHub Pages站点信息显示</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Your site is published at http://meow0v0.github.io/</span><br></pre></td></tr></table></figure><p>即表示已经完成站点的创建</p></li></ul><ul><li>可在设置中点击Choose Theme，选择Github预设主题，并通过xxx.github.io浏览主页。</li></ul><h2 id="SSH-Keys设置"><a href="#SSH-Keys设置" class="headerlink" title="SSH Keys设置"></a>SSH Keys设置</h2><h3 id="生成密钥对"><a href="#生成密钥对" class="headerlink" title="生成密钥对"></a>生成密钥对</h3><ul><li><p>在命令行中通过<code>ssh-keygen</code>生成密钥</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd ~/.ssh</span><br><span class="line">ssh-keygen -t rsa -C "meow0v0@github.com"</span><br></pre></td></tr></table></figure><p>出现三次提示输入，一般可直接按enter跳过：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Enter file in which to save the key (/home/you/.ssh/id_rsa):</span><br><span class="line">Enter passphrase (empty for no passphrase):</span><br><span class="line">Enter same passphrase again:</span><br></pre></td></tr></table></figure><p>生成成功，出现以下提示：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Your identification has been saved in /home/you/.ssh/id_rsa.</span><br><span class="line">Your public key has been saved in /home/you/.ssh/id_rsa.pub.</span><br><span class="line">The key fingerprint is:</span><br><span class="line">…………………密钥内容…………………… </span><br><span class="line">meow0v0@github.com</span><br></pre></td></tr></table></figure></li></ul><h3 id="设置Github中的Deploy-keys"><a href="#设置Github中的Deploy-keys" class="headerlink" title="设置Github中的Deploy keys"></a>设置Github中的Deploy keys</h3><ul><li><p>在Github设置中，添加SSH密钥</p><ul><li>个人用户：Settings —&gt; SSH GPG keys</li><li>单个项目：Settings —&gt; Deploy keys —&gt; Add deploy key</li></ul><p>将生成的<code>id_rsa.pub</code>中内容全部复制到key输入框中，点击add key完成添加</p></li><li><p>测试是否添加成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>若出现以下内容，则表示配置完成，添加成功：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hi meow0v0! You've successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure></li></ul><h2 id="Github客户端"><a href="#Github客户端" class="headerlink" title="Github客户端"></a>Github客户端</h2><ul><li>可以根据个人系统前往Github进行下载：<a href="https://desktop.github.com/" target="_blank" rel="noopener">Github Desktop</a></li><li>有余力者可以直接使用git命令进行操作。</li></ul><h1 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h1><h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h2><ul><li>使用Hexo需安装以下环境：<ul><li>Node.js：<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">官方下载地址</a>，<a href="http://www.runoob.com/nodejs/nodejs-install-setup.html" target="_blank" rel="noopener">参考配置教程</a></li><li>git：<a href="https://git-scm.com/download/" target="_blank" rel="noopener">官方下载地址</a></li></ul></li></ul><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><ul><li><p>安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir Hexo //Hexo为新建立的博客目录</span><br><span class="line">cd Hexo</span><br><span class="line">npm install -g hexo-cli</span><br><span class="line">npm install hexo --save</span><br></pre></td></tr></table></figure></li><li><p>部署Hexo</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure></li><li><p>安装Hexo插件：可自动生成sitemap，rss，部署到git等</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-index --save</span><br><span class="line">npm install hexo-generator-archive --save</span><br><span class="line">npm install hexo-generator-category --save</span><br><span class="line">npm install hexo-generator-tag --save</span><br><span class="line">npm install hexo-server --save</span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">npm install hexo-deployer-heroku --save</span><br><span class="line">npm install hexo-deployer-rsync --save</span><br><span class="line">npm install hexo-deployer-openshift --save</span><br><span class="line">npm install hexo-renderer-marked@0.2 --save</span><br><span class="line">npm install hexo-renderer-stylus@0.2 --save</span><br><span class="line">npm install hexo-generator-feed@1 --save</span><br><span class="line">npm install hexo-generator-sitemap@1 --save</span><br></pre></td></tr></table></figure></li></ul><h2 id="Hexo常用命令"><a href="#Hexo常用命令" class="headerlink" title="Hexo常用命令"></a>Hexo常用命令</h2><h3 id="迁移博客内容"><a href="#迁移博客内容" class="headerlink" title="迁移博客内容"></a>迁移博客内容</h3><ul><li><p>若从其他博客系统迁移至Hexo，需使用以下命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo migrate &lt;type&gt;</span><br></pre></td></tr></table></figure></li></ul><h3 id="创建新文章"><a href="#创建新文章" class="headerlink" title="创建新文章"></a>创建新文章</h3><ul><li><p>执行new命令，可生成指定名称文章至Hexo\source\_posts\title.md</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo new [layout] "title" //新建文章</span><br><span class="line">hexo n [layout] "title"//简化n命令(与上面等同)</span><br></pre></td></tr></table></figure><p>其中layout为可选项，参考Hexo\scaffolds目录下，默认为post</p></li></ul><h3 id="运行服务器"><a href="#运行服务器" class="headerlink" title="运行服务器"></a>运行服务器</h3><ul><li><p>以下两个命令皆可启动服务器，并通过<a href="http://localhost:4000查看（修改自动更新）" target="_blank" rel="noopener">http://localhost:4000查看（修改自动更新）</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure></li><li><p>可按<code>Ctrl+C</code>停止服务器</p></li></ul><h3 id="清除缓存"><a href="#清除缓存" class="headerlink" title="清除缓存"></a>清除缓存</h3><ul><li><p>可通过下面命令清除缓存文件<code>db.json</code>和已生成的静态文件<code>public</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure></li></ul><h3 id="生成静态站点文件"><a href="#生成静态站点文件" class="headerlink" title="生成静态站点文件"></a>生成静态站点文件</h3><ul><li><p>以下两个命令皆可生成静态站点文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br><span class="line">hexo g</span><br></pre></td></tr></table></figure></li></ul><h3 id="部署到Github"><a href="#部署到Github" class="headerlink" title="部署到Github"></a>部署到Github</h3><ul><li><p>需先修改Hexo根目录下站点配置文件<code>_config.yml</code>（注意<code>:</code>后有空格<code></code>）</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">  repository:</span> <span class="string">git@github.com:meow0v0/meow0v0.github.io.git</span></span><br><span class="line"><span class="attr">  branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure></li><li><p>在git bash中输入命令，即可完成到Github的部署</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></li><li><p>若站点配置文件配置好后，每次可通过以下命令快速建立并部署</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g -d</span><br></pre></td></tr></table></figure></li></ul><h1 id="Hexo-主题配置"><a href="#Hexo-主题配置" class="headerlink" title="Hexo 主题配置"></a>Hexo 主题配置</h1><h2 id="主题选择"><a href="#主题选择" class="headerlink" title="主题选择"></a>主题选择</h2><ul><li><p>网上有许多Jekyll-Theme免费模板，以下为主流样式站点可供选择</p><ul><li><a href="https://hexo.io/themes/" target="_blank" rel="noopener">Themes|Hexo</a></li><li><a href="https://jekyllthemes.io/" target="_blank" rel="noopener">Jekyll Themes &amp; Templates</a></li><li>……</li></ul><p>本站使用当前github上最热的一款<a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">NexT</a>主题（仓库<a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">hexo-theme-next</a>）</p><p>官方文档中有详细安装步骤，此处简单介绍配置过程。</p></li></ul><h2 id="下载主题"><a href="#下载主题" class="headerlink" title="下载主题"></a>下载主题</h2><ul><li><p>在cmd下，定位至Hexo站点目录下，并将主题克隆到themes的next文件夹下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd Hexo</span><br><span class="line">git clone https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure></li><li><p>随后可使用<code>git pull</code>快速更新主题</p></li></ul><h2 id="启用主题"><a href="#启用主题" class="headerlink" title="启用主题"></a>启用主题</h2><ul><li><p>hexo官方使用landscape主题，更换主题需要在站点配置文件<code>_config.yml</code>中配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br></pre></td></tr></table></figure></li><li><p>切换主题后，需要清除Hexo缓存，以解决渲染错误问题，并通过访问本地服务器验证是否更换</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure></li></ul><h2 id="个性化设置"><a href="#个性化设置" class="headerlink" title="个性化设置"></a>个性化设置</h2><p>见下篇=-=！懒的码了……</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文讲述在Github上通过GitHub Pages搭建个人博客过程。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Blog" scheme="http://meow0v0.github.io/categories/Blog/"/>
    
    
      <category term="Hexo" scheme="http://meow0v0.github.io/tags/Hexo/"/>
    
      <category term="Github" scheme="http://meow0v0.github.io/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://meow0v0.github.io/2018/04/06/hello-world/"/>
    <id>http://meow0v0.github.io/2018/04/06/hello-world/</id>
    <published>2018-04-05T19:32:06.349Z</published>
    <updated>2018-04-06T06:37:58.763Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
