<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>meow0v0</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://meow0v0.github.io/"/>
  <updated>2018-04-11T01:45:42.270Z</updated>
  <id>http://meow0v0.github.io/</id>
  
  <author>
    <name>meow0v0</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ActiveMQ基础</title>
    <link href="http://meow0v0.github.io/2018/04/11/ActiveMQ%E5%9F%BA%E7%A1%80/"/>
    <id>http://meow0v0.github.io/2018/04/11/ActiveMQ基础/</id>
    <published>2018-04-11T01:42:32.000Z</published>
    <updated>2018-04-11T01:45:42.270Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ActiveMQ"><a href="#ActiveMQ" class="headerlink" title="ActiveMQ"></a>ActiveMQ</h1><a id="more"></a><h1 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h1><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p><a href="https://my.oschina.net/xiaoxishan/blog/378743" target="_blank" rel="noopener">ActiveMQ学习笔记(1)——JMS的概念</a></p><p><a href="https://my.oschina.net/xiaoxishan/blog/378752" target="_blank" rel="noopener">ActiveMQ学习笔记(2)——JMS消息模型</a></p><h3 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h3><p><a href="https://my.oschina.net/xiaoxishan/blog/380352" target="_blank" rel="noopener">ActiveMQ学习笔记(3)——ActiveMQ的安装</a></p><h3 id="基本实现"><a href="#基本实现" class="headerlink" title="基本实现"></a>基本实现</h3><p><a href="https://my.oschina.net/xiaoxishan/blog/380446" target="_blank" rel="noopener">ActiveMQ学习笔记(4)——通过ActiveMQ收发消息</a></p><h1 id="java具体实现类"><a href="#java具体实现类" class="headerlink" title="java具体实现类"></a>java具体实现类</h1><h3 id="——Session——"><a href="#——Session——" class="headerlink" title="——Session——"></a>——Session——</h3><h4 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h4><ul><li>P：生产者</li><li>C：消费者</li><li>服务端：P / ActiveMQ Service</li><li>客户端：ActiveMQ Service / C</li></ul><h4 id="接受消息"><a href="#接受消息" class="headerlink" title="接受消息"></a>接受消息</h4><ul><li>流程<ul><li>客户端接收消息</li><li>客户端处理消息</li><li>消息被签收（标志——客户端成功接收消息）<a href="https://blog.csdn.net/lulongzhou_llz/article/details/42270113" target="_blank" rel="noopener">ActiveMQ讯息传送机制以及ACK机制</a></li></ul></li></ul><h4 id="消息签收-ACK-MODE"><a href="#消息签收-ACK-MODE" class="headerlink" title="消息签收 - ACK_MODE"></a>消息签收 - ACK_MODE</h4><ul><li>不带事务的Session<ul><li><strong>Session.AUTO_ACKNOWLEDGE</strong>（1 自动确认）：当客户端从receive()或onMessage()成功返回时，Session自动签收客户端的消息。</li><li><strong>Session.CLIENT_ACKNOWLEDGE</strong>（2 客户端确认）：客户端需调用消息的acknowledge方法签收消息。</li><li><strong>Session.DUPS_OK_ACKNOWLEDGE</strong>（3 自动批量确认）：不是必须签收，消息可能重复发送。第二次重传时，消息头的JmsDelivered置为true，表示当前消息已传送过一次，客户端需进行重复处理控制。</li><li><strong>Session.INDIVIDUAL_ACKNOWLEDGE</strong>（4 单条消息确认）：</li></ul></li><li>带事务的Session<ul><li><strong>Session.SESSION_TRANSACTED</strong>（0 事务提交并确认）：<ul><li>提交时，客户端自动签收消息。</li><li><strong>事务回滚时</strong>，所有已经接收的消息会<strong>再次发送</strong>。</li></ul></li></ul></li></ul><h4 id="消息签收-ACK-TYPE"><a href="#消息签收-ACK-TYPE" class="headerlink" title="消息签收 - ACK_TYPE"></a>消息签收 - ACK_TYPE</h4><ul><li>MessageAck类中定义。客户端在不同ACK_MODE时，在不同时机发送ACK指令。</li><li>ACK_TYPE<ul><li><strong>DELIVERED_ACK_TYPE</strong>（0）：消息”已接收”，但尚未处理结束</li><li><strong>STANDARD_ACK_TYPE</strong>（2）： “标准”类型,通常表示为消息”处理成功”，broker端可以删除消息了</li><li><strong>POSION_ACK_TYPE</strong> （1）：消息”错误”,通常表示”抛弃”此消息。如消息重发多次仍无法正确处理，消息将被删除或者DLQ(死信队列)</li><li><strong>REDELIVERED_ACK_TYPE</strong>（3）：消息需”重发”，比如consumer处理消息时抛出了异常，broker稍后会重新发送此消息</li><li><strong>INDIVIDUAL_ACK_TYPE</strong>（4）：表示只确认”单条消息”,无论在任何ACK_MODE下    </li><li><strong>UNMATCHED_ACK_TYPE</strong>（5）：BROKER间转发消息时,接收端”拒绝”消息</li></ul></li></ul><h4 id="Session设置"><a href="#Session设置" class="headerlink" title="Session设置"></a>Session设置</h4><table><thead><tr><th style="text-align:center">模式</th><th style="text-align:center">服务端</th><th style="text-align:center">客户端</th><th style="text-align:center">AUTO_*</th><th style="text-align:center">CLIENT_*</th><th style="text-align:center">备注</th></tr></thead><tbody><tr><td style="text-align:center">生产者</td><td style="text-align:center">P</td><td style="text-align:center">ActiveMQ<br>Service</td><td style="text-align:center">√</td><td style="text-align:center">√</td><td style="text-align:center">区别不大</td></tr><tr><td style="text-align:center">消费者</td><td style="text-align:center">ActiveMQ<br>Service</td><td style="text-align:center">C</td><td style="text-align:center">收到即签收，忽略处理正确性</td><td style="text-align:center">需手动acknowledge</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">P &amp; C</td><td style="text-align:center">P</td><td style="text-align:center">C</td><td style="text-align:center">√</td><td style="text-align:center">√</td><td style="text-align:center">没有区别</td></tr></tbody></table><h3 id="——Consumer——"><a href="#——Consumer——" class="headerlink" title="——Consumer——"></a>——Consumer——</h3><h4 id="获取消息"><a href="#获取消息" class="headerlink" title="获取消息"></a>获取消息</h4><ul><li><p>获取方式</p><ul><li>Push：消息中间件主动将消息推给消费者。（尽可能快，但消费者缓冲区可能溢出）</li><li>Pull：消费者主动从消息中间件拉取消息。（增加消息延迟，消息到消费者慢）</li></ul></li><li><p><strong>Perfetch limit</strong></p><ul><li><p>规定一次可以向消费者Push的消息数（消息预取值）</p><p>推送消息数 = perfetch limit时，若消费者未返回ACK，则消息中间件不再继续推送消息。</p></li><li><p><strong>perfetch limit = 0</strong>：Pull方式，消费者主动从消息中间件拉取消息。receive()先发送PULL指令并阻塞，直到broker端返回消息为止。消息只能逐个获取。</p></li><li><p><strong>prefetch limit &gt; 0</strong>：broker会批量PUSH给客户端一定数量(&lt;=prefetch)消息，客户端将未消费的消息放入本地队列中，队列中有消息则receive方法会立即返回。一定数量ACK后broker端将继续批量PUSH给客户端。异步方式必须&gt;0（中间件不主动push消息，消费者不被动获取消息）</p></li></ul></li><li><p><strong>Optimized Acknowledge</strong></p><ul><li>true：prefetch &gt; 0，单条确认</li><li>false：prefetch &gt;= 0，批量确认（延迟确认）</li></ul></li></ul><ul><li>同步方式：Message ActiveMQMesasageConsumer.<strong>receive</strong>()<ul><li>receive()：无限阻塞，直至有消息产生</li><li>receive(long timeout)：获取下一个消息，导致一段时间阻塞，直至新消息或超时。超时则返回null。</li><li>receiveNoWait()：获取下一个消息，不会阻塞。若没有下一个消息则直接返回null。</li></ul></li><li>异步方式：<strong>void</strong> <strong>setMessageListener(MessageListener)</strong><ul><li>​</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;ActiveMQ&quot;&gt;&lt;a href=&quot;#ActiveMQ&quot; class=&quot;headerlink&quot; title=&quot;ActiveMQ&quot;&gt;&lt;/a&gt;ActiveMQ&lt;/h1&gt;
    
    </summary>
    
    
      <category term="ActiveMQ Java" scheme="http://meow0v0.github.io/tags/ActiveMQ-Java/"/>
    
  </entry>
  
  <entry>
    <title>ActiveMQ基本实现</title>
    <link href="http://meow0v0.github.io/2018/04/11/ActiveMQ%E5%9F%BA%E6%9C%AC%E5%AE%9E%E7%8E%B0/"/>
    <id>http://meow0v0.github.io/2018/04/11/ActiveMQ基本实现/</id>
    <published>2018-04-11T01:38:58.000Z</published>
    <updated>2018-04-11T01:40:56.893Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基本实现代码"><a href="#基本实现代码" class="headerlink" title="基本实现代码"></a>基本实现代码</h1><a id="more"></a><h2 id="Queue"><a href="#Queue" class="headerlink" title="Queue"></a>Queue</h2><h3 id="Producer"><a href="#Producer" class="headerlink" title="Producer"></a>Producer</h3><ul><li>package &amp; import</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> queue;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.jms.Connection;</span><br><span class="line"><span class="keyword">import</span> javax.jms.ConnectionFactory;</span><br><span class="line"><span class="keyword">import</span> javax.jms.Destination;</span><br><span class="line"><span class="keyword">import</span> javax.jms.JMSException;</span><br><span class="line"><span class="keyword">import</span> javax.jms.MessageProducer;</span><br><span class="line"><span class="keyword">import</span> javax.jms.Session;</span><br><span class="line"><span class="keyword">import</span> javax.jms.TextMessage;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.activemq.ActiveMQConnection;</span><br><span class="line"><span class="keyword">import</span> org.apache.activemq.ActiveMQConnectionFactory;</span><br></pre></td></tr></table></figure><ul><li>class</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Producer</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Producer producter = <span class="keyword">new</span> Producer();</span><br><span class="line">String msg = <span class="string">"meow!"</span>;</span><br><span class="line">producter.sendMessage(msg);</span><br><span class="line">System.out.println(<span class="string">"消息发送结束："</span> + msg);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendMessage</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line">String user = ActiveMQConnection.DEFAULT_USER;</span><br><span class="line">String password = ActiveMQConnection.DEFAULT_PASSWORD;</span><br><span class="line">String url = ActiveMQConnection.DEFAULT_BROKER_URL;</span><br><span class="line">String subject = <span class="string">"test"</span>;</span><br><span class="line">ConnectionFactory contectionFactory = <span class="keyword">new</span> ActiveMQConnectionFactory(user, password, url);</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">Connection connection = contectionFactory.createConnection();</span><br><span class="line">connection.start();</span><br><span class="line">Session session = connection.createSession(Boolean.TRUE, Session.AUTO_ACKNOWLEDGE);</span><br><span class="line">Destination destination = session.createQueue(subject);</span><br><span class="line">MessageProducer producer = session.createProducer(destination);</span><br><span class="line">TextMessage message = session.createTextMessage();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">String tmp = i + <span class="string">":"</span> + msg;</span><br><span class="line">message.setText(tmp + <span class="string">"(Text)"</span>);</span><br><span class="line">message.setStringProperty(<span class="string">"hello"</span>, tmp);</span><br><span class="line">producer.send(message);</span><br><span class="line">System.out.println(<span class="string">"Send: "</span> + tmp);</span><br><span class="line">Thread.sleep(<span class="number">3000</span>);</span><br><span class="line">session.commit();</span><br><span class="line">&#125;</span><br><span class="line">session.close();</span><br><span class="line">connection.close();</span><br><span class="line">&#125; <span class="keyword">catch</span>(JMSException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">catch</span>(InterruptedException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Consumer（同步接收）"><a href="#Consumer（同步接收）" class="headerlink" title="Consumer（同步接收）"></a>Consumer（同步接收）</h3><ul><li>package &amp; import</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> queue;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.jms.Connection;</span><br><span class="line"><span class="keyword">import</span> javax.jms.ConnectionFactory;</span><br><span class="line"><span class="keyword">import</span> javax.jms.Destination;</span><br><span class="line"><span class="keyword">import</span> javax.jms.JMSException;</span><br><span class="line"><span class="keyword">import</span> javax.jms.Message;</span><br><span class="line"><span class="keyword">import</span> javax.jms.MessageConsumer;</span><br><span class="line"><span class="keyword">import</span> javax.jms.Session;</span><br><span class="line"><span class="keyword">import</span> javax.jms.TextMessage;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.activemq.ActiveMQConnection;</span><br><span class="line"><span class="keyword">import</span> org.apache.activemq.ActiveMQConnectionFactory;</span><br></pre></td></tr></table></figure><ul><li>class</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Consumer</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">String user = ActiveMQConnection.DEFAULT_USER;</span><br><span class="line">String password = ActiveMQConnection.DEFAULT_PASSWORD;</span><br><span class="line">String url = ActiveMQConnection.DEFAULT_BROKER_URL;</span><br><span class="line">String subject = <span class="string">"test"</span>;</span><br><span class="line">ConnectionFactory connectionFactory = <span class="keyword">new</span> ActiveMQConnectionFactory(user, password, url);</span><br><span class="line">Connection connection = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123; </span><br><span class="line">connection = connectionFactory.createConnection();</span><br><span class="line">connection.start();</span><br><span class="line">Session session = connection.createSession(Boolean.FALSE, Session.AUTO_ACKNOWLEDGE);</span><br><span class="line">Destination destination = session.createQueue(subject);</span><br><span class="line">MessageConsumer consumer = session.createConsumer(destination);</span><br><span class="line"><span class="keyword">long</span> timeout = <span class="number">10</span> * <span class="number">1000</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="keyword">true</span>) &#123;</span><br><span class="line">Message message = consumer.receive(timeout);</span><br><span class="line"><span class="keyword">if</span>(message == <span class="keyword">null</span>) <span class="keyword">break</span>;</span><br><span class="line">String text = ((TextMessage) message).getText();</span><br><span class="line">System.out.println(<span class="string">"Received： "</span> + text);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span>(JMSException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(connection != <span class="keyword">null</span>) &#123;</span><br><span class="line">connection.close();</span><br><span class="line">System.out.println(<span class="string">"消息接收结束！"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (Throwable ignore)&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Listener（异步接收）"><a href="#Listener（异步接收）" class="headerlink" title="Listener（异步接收）"></a>Listener（异步接收）</h3><ul><li>package &amp; import</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> queue;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.jms.Connection;</span><br><span class="line"><span class="keyword">import</span> javax.jms.ConnectionFactory;</span><br><span class="line"><span class="keyword">import</span> javax.jms.Destination;</span><br><span class="line"><span class="keyword">import</span> javax.jms.JMSException;</span><br><span class="line"><span class="keyword">import</span> javax.jms.Message;</span><br><span class="line"><span class="keyword">import</span> javax.jms.MessageConsumer;</span><br><span class="line"><span class="keyword">import</span> javax.jms.MessageListener;</span><br><span class="line"><span class="keyword">import</span> javax.jms.Session;</span><br><span class="line"><span class="keyword">import</span> javax.jms.TextMessage;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.activemq.ActiveMQConnection;</span><br><span class="line"><span class="keyword">import</span> org.apache.activemq.ActiveMQConnectionFactory;</span><br></pre></td></tr></table></figure><ul><li>class</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Listener</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">String user = ActiveMQConnection.DEFAULT_USER;</span><br><span class="line">String password = ActiveMQConnection.DEFAULT_PASSWORD;</span><br><span class="line">String url = ActiveMQConnection.DEFAULT_BROKER_URL;</span><br><span class="line">String subject = <span class="string">"test"</span>;</span><br><span class="line">ConnectionFactory connectionFactory = <span class="keyword">new</span> ActiveMQConnectionFactory(user, password, url);</span><br><span class="line">Connection connection;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">connection = connectionFactory.createConnection();</span><br><span class="line">connection.start();</span><br><span class="line"><span class="keyword">final</span> Session session = connection.createSession(Boolean.TRUE, Session.AUTO_ACKNOWLEDGE);</span><br><span class="line">Destination destination = session.createQueue(subject);</span><br><span class="line">MessageConsumer consumer = session.createConsumer(destination);</span><br><span class="line">consumer.setMessageListener(<span class="keyword">new</span> MessageListener()&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onMessage</span><span class="params">(Message msg)</span> </span>&#123;</span><br><span class="line">TextMessage message = (TextMessage) msg;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">String hello = message.getStringProperty(<span class="string">"hello"</span>);</span><br><span class="line">System.out.println(<span class="string">"Received：\t"</span> + hello);</span><br><span class="line">session.commit();</span><br><span class="line">&#125; <span class="keyword">catch</span>(JMSException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">session.close();</span><br><span class="line">connection.close();</span><br><span class="line">&#125; <span class="keyword">catch</span>(JMSException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>waitInput（暂停退出）（未验证代码正确性）</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">waitInput</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="meta">@SuppressWarnings</span>(<span class="string">"resource"</span>)</span><br><span class="line">java.util.Scanner scanner = <span class="keyword">new</span> java.util.Scanner(System.in);</span><br><span class="line">System.out.println(<span class="string">"按Enter键退出："</span>);</span><br><span class="line">String next = scanner.nextLine();</span><br><span class="line"><span class="keyword">return</span> next;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Topic（未验证）"><a href="#Topic（未验证）" class="headerlink" title="Topic（未验证）"></a>Topic（未验证）</h2><h3 id="Publisher"><a href="#Publisher" class="headerlink" title="Publisher"></a>Publisher</h3><ul><li>package &amp; import</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> topic;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.jms.Connection;</span><br><span class="line"><span class="keyword">import</span> javax.jms.ConnectionFactory;</span><br><span class="line"><span class="keyword">import</span> javax.jms.JMSException;</span><br><span class="line"><span class="keyword">import</span> javax.jms.Destination;</span><br><span class="line"><span class="keyword">import</span> javax.jms.MessageProducer;</span><br><span class="line"><span class="keyword">import</span> javax.jms.Session;</span><br><span class="line"><span class="keyword">import</span> javax.jms.TextMessage;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.activemq.ActiveMQConnection;</span><br><span class="line"><span class="keyword">import</span> org.apache.activemq.ActiveMQConnectionFactory;</span><br></pre></td></tr></table></figure><ul><li>class</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Publisher</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Publisher pb = <span class="keyword">new</span> Publisher();</span><br><span class="line">String msg = <span class="string">"Hello meow!"</span>;</span><br><span class="line">pb.sendMessage(msg);</span><br><span class="line">System.out.println(<span class="string">"消息发送结束："</span> + msg);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendMessage</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line">String user = ActiveMQConnection.DEFAULT_USER;</span><br><span class="line">String password = ActiveMQConnection.DEFAULT_PASSWORD;</span><br><span class="line">String url = ActiveMQConnection.DEFAULT_BROKER_URL;</span><br><span class="line">String subject = <span class="string">"MQ.TOPIC"</span>;</span><br><span class="line">ConnectionFactory contectionFactory = <span class="keyword">new</span> ActiveMQConnectionFactory(user, password, url);</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">Connection connection = contectionFactory.createConnection();</span><br><span class="line">connection.start();</span><br><span class="line">Session session = connection.createSession(Boolean.TRUE, Session.AUTO_ACKNOWLEDGE);</span><br><span class="line">Destination destination = session.createTopic(subject);</span><br><span class="line">MessageProducer producer = session.createProducer(destination);</span><br><span class="line">TextMessage message = session.createTextMessage();</span><br><span class="line">message.setStringProperty(<span class="string">"hello"</span>, msg);</span><br><span class="line">producer.send(message);</span><br><span class="line">session.commit();</span><br><span class="line">session.close();</span><br><span class="line">connection.close();</span><br><span class="line">&#125; <span class="keyword">catch</span>(JMSException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Subscriber"><a href="#Subscriber" class="headerlink" title="Subscriber"></a>Subscriber</h3><ul><li>package &amp; import</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> topic;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.jms.Connection;</span><br><span class="line"><span class="keyword">import</span> javax.jms.ConnectionFactory;</span><br><span class="line"><span class="keyword">import</span> javax.jms.JMSException;</span><br><span class="line"><span class="keyword">import</span> javax.jms.Message;</span><br><span class="line"><span class="keyword">import</span> javax.jms.MessageConsumer;</span><br><span class="line"><span class="keyword">import</span> javax.jms.MessageListener;</span><br><span class="line"><span class="keyword">import</span> javax.jms.Session;</span><br><span class="line"><span class="keyword">import</span> javax.jms.TextMessage;</span><br><span class="line"><span class="keyword">import</span> javax.jms.Topic;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.activemq.ActiveMQConnection;</span><br><span class="line"><span class="keyword">import</span> org.apache.activemq.ActiveMQConnectionFactory;</span><br></pre></td></tr></table></figure><ul><li>class</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Subscriber</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">String user = ActiveMQConnection.DEFAULT_USER;</span><br><span class="line">String password = ActiveMQConnection.DEFAULT_PASSWORD;</span><br><span class="line">String url = ActiveMQConnection.DEFAULT_BROKER_URL;</span><br><span class="line">String subject = <span class="string">"MQ.TOPIC"</span>;</span><br><span class="line">ConnectionFactory connectionFactory = <span class="keyword">new</span> ActiveMQConnectionFactory(user, password, url);</span><br><span class="line">Connection connection;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">connection = connectionFactory.createConnection();</span><br><span class="line">connection.start();</span><br><span class="line"><span class="keyword">final</span> Session session = connection.createSession(Boolean.TRUE, Session.AUTO_ACKNOWLEDGE);</span><br><span class="line">Topic topic = session.createTopic(subject);</span><br><span class="line">MessageConsumer consumer = session.createConsumer(topic);</span><br><span class="line">consumer.setMessageListener(<span class="keyword">new</span> MessageListener()&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onMessage</span><span class="params">(Message msg)</span> </span>&#123;</span><br><span class="line">TextMessage message = (TextMessage) msg;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">String hello = message.getStringProperty(<span class="string">"hello"</span>);</span><br><span class="line">System.out.println(<span class="string">"Subscriber-SecondSubscriber-Received：\t"</span> + hello);</span><br><span class="line">session.commit();</span><br><span class="line">&#125; <span class="keyword">catch</span>(JMSException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">session.close();</span><br><span class="line">connection.close();</span><br><span class="line">&#125; <span class="keyword">catch</span> (JMSException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;基本实现代码&quot;&gt;&lt;a href=&quot;#基本实现代码&quot; class=&quot;headerlink&quot; title=&quot;基本实现代码&quot;&gt;&lt;/a&gt;基本实现代码&lt;/h1&gt;
    
    </summary>
    
    
      <category term="ActiveMQ Java" scheme="http://meow0v0.github.io/tags/ActiveMQ-Java/"/>
    
  </entry>
  
  <entry>
    <title>Hexo + GitHub Pages (一) 个人主页搭建</title>
    <link href="http://meow0v0.github.io/2018/04/06/Hexo-Github-Pages%20(%E4%B8%80)%20%E4%B8%AA%E4%BA%BA%E4%B8%BB%E9%A1%B5%E6%90%AD%E5%BB%BA/"/>
    <id>http://meow0v0.github.io/2018/04/06/Hexo-Github-Pages (一) 个人主页搭建/</id>
    <published>2018-04-06T06:04:08.000Z</published>
    <updated>2018-04-07T03:57:31.898Z</updated>
    
    <content type="html"><![CDATA[<p>本文讲述在Github上通过GitHub Pages搭建个人博客过程。<br><a id="more"></a><br><a href="https://pages.github.com/" target="_blank" rel="noopener">GitHub Pages</a>为Github项目，提供免费的个人主页或博客网站，亦可绑定个人域名使用。通过Jekyll静态页面转换引擎实现模板的自动转换。</p><h1 id="Github-Pages"><a href="#Github-Pages" class="headerlink" title="Github Pages"></a>Github Pages</h1><h2 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h2><ul><li><p>在Github个人首页上选择 New repository，或点击<a href="https://github.com/new" target="_blank" rel="noopener">新建仓库</a>，新建仓库。</p><ul><li>Repository name：填入xxx.github.io（xxx为github用户名），格式固定才可访问</li><li>Description：可选项，为仓库项目描述</li><li>Public / Private：选择Public</li><li>README：可勾选预初始化，gitignore选择java，license选择GNU General Public License v2.0</li></ul><p>随后点击Create Repository。</p></li></ul><ul><li><p>进入仓库的Setting并看到GitHub Pages站点信息显示</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Your site is published at http://meow0v0.github.io/</span><br></pre></td></tr></table></figure><p>即表示已经完成站点的创建</p></li></ul><ul><li>可在设置中点击Choose Theme，选择Github预设主题，并通过xxx.github.io浏览主页。</li></ul><h2 id="SSH-Keys设置"><a href="#SSH-Keys设置" class="headerlink" title="SSH Keys设置"></a>SSH Keys设置</h2><h3 id="生成密钥对"><a href="#生成密钥对" class="headerlink" title="生成密钥对"></a>生成密钥对</h3><ul><li><p>在命令行中通过<code>ssh-keygen</code>生成密钥</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd ~/.ssh</span><br><span class="line">ssh-keygen -t rsa -C "meow0v0@github.com"</span><br></pre></td></tr></table></figure><p>出现三次提示输入，一般可直接按enter跳过：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Enter file in which to save the key (/home/you/.ssh/id_rsa):</span><br><span class="line">Enter passphrase (empty for no passphrase):</span><br><span class="line">Enter same passphrase again:</span><br></pre></td></tr></table></figure><p>生成成功，出现以下提示：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Your identification has been saved in /home/you/.ssh/id_rsa.</span><br><span class="line">Your public key has been saved in /home/you/.ssh/id_rsa.pub.</span><br><span class="line">The key fingerprint is:</span><br><span class="line">…………………密钥内容…………………… </span><br><span class="line">meow0v0@github.com</span><br></pre></td></tr></table></figure></li></ul><h3 id="设置Github中的Deploy-keys"><a href="#设置Github中的Deploy-keys" class="headerlink" title="设置Github中的Deploy keys"></a>设置Github中的Deploy keys</h3><ul><li><p>在Github设置中，添加SSH密钥</p><ul><li>个人用户：Settings —&gt; SSH GPG keys</li><li>单个项目：Settings —&gt; Deploy keys —&gt; Add deploy key</li></ul><p>将生成的<code>id_rsa.pub</code>中内容全部复制到key输入框中，点击add key完成添加</p></li><li><p>测试是否添加成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>若出现以下内容，则表示配置完成，添加成功：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hi meow0v0! You've successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure></li></ul><h2 id="Github客户端"><a href="#Github客户端" class="headerlink" title="Github客户端"></a>Github客户端</h2><ul><li>可以根据个人系统前往Github进行下载：<a href="https://desktop.github.com/" target="_blank" rel="noopener">Github Desktop</a></li><li>有余力者可以直接使用git命令进行操作。</li></ul><h1 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h1><h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h2><ul><li>使用Hexo需安装以下环境：<ul><li>Node.js：<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">官方下载地址</a>，<a href="http://www.runoob.com/nodejs/nodejs-install-setup.html" target="_blank" rel="noopener">参考配置教程</a></li><li>git：<a href="https://git-scm.com/download/" target="_blank" rel="noopener">官方下载地址</a></li></ul></li></ul><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><ul><li><p>安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir Hexo //Hexo为新建立的博客目录</span><br><span class="line">cd Hexo</span><br><span class="line">npm install -g hexo-cli</span><br><span class="line">npm install hexo --save</span><br></pre></td></tr></table></figure></li><li><p>部署Hexo</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure></li><li><p>安装Hexo插件：可自动生成sitemap，rss，部署到git等</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-index --save</span><br><span class="line">npm install hexo-generator-archive --save</span><br><span class="line">npm install hexo-generator-category --save</span><br><span class="line">npm install hexo-generator-tag --save</span><br><span class="line">npm install hexo-server --save</span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">npm install hexo-deployer-heroku --save</span><br><span class="line">npm install hexo-deployer-rsync --save</span><br><span class="line">npm install hexo-deployer-openshift --save</span><br><span class="line">npm install hexo-renderer-marked@0.2 --save</span><br><span class="line">npm install hexo-renderer-stylus@0.2 --save</span><br><span class="line">npm install hexo-generator-feed@1 --save</span><br><span class="line">npm install hexo-generator-sitemap@1 --save</span><br></pre></td></tr></table></figure></li></ul><h2 id="Hexo常用命令"><a href="#Hexo常用命令" class="headerlink" title="Hexo常用命令"></a>Hexo常用命令</h2><h3 id="迁移博客内容"><a href="#迁移博客内容" class="headerlink" title="迁移博客内容"></a>迁移博客内容</h3><ul><li><p>若从其他博客系统迁移至Hexo，需使用以下命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo migrate &lt;type&gt;</span><br></pre></td></tr></table></figure></li></ul><h3 id="创建新文章"><a href="#创建新文章" class="headerlink" title="创建新文章"></a>创建新文章</h3><ul><li><p>执行new命令，可生成指定名称文章至Hexo\source\_posts\title.md</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo new [layout] "title" //新建文章</span><br><span class="line">hexo n [layout] "title"//简化n命令(与上面等同)</span><br></pre></td></tr></table></figure><p>其中layout为可选项，参考Hexo\scaffolds目录下，默认为post</p></li></ul><h3 id="运行服务器"><a href="#运行服务器" class="headerlink" title="运行服务器"></a>运行服务器</h3><ul><li><p>以下两个命令皆可启动服务器，并通过<a href="http://localhost:4000查看（修改自动更新）" target="_blank" rel="noopener">http://localhost:4000查看（修改自动更新）</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure></li><li><p>可按<code>Ctrl+C</code>停止服务器</p></li></ul><h3 id="清除缓存"><a href="#清除缓存" class="headerlink" title="清除缓存"></a>清除缓存</h3><ul><li><p>可通过下面命令清除缓存文件<code>db.json</code>和已生成的静态文件<code>public</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure></li></ul><h3 id="生成静态站点文件"><a href="#生成静态站点文件" class="headerlink" title="生成静态站点文件"></a>生成静态站点文件</h3><ul><li><p>以下两个命令皆可生成静态站点文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br><span class="line">hexo g</span><br></pre></td></tr></table></figure></li></ul><h3 id="部署到Github"><a href="#部署到Github" class="headerlink" title="部署到Github"></a>部署到Github</h3><ul><li><p>需先修改Hexo根目录下站点配置文件<code>_config.yml</code>（注意<code>:</code>后有空格<code></code>）</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">  repository:</span> <span class="string">git@github.com:meow0v0/meow0v0.github.io.git</span></span><br><span class="line"><span class="attr">  branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure></li><li><p>在git bash中输入命令，即可完成到Github的部署</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></li><li><p>若站点配置文件配置好后，每次可通过以下命令快速建立并部署</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g -d</span><br></pre></td></tr></table></figure></li></ul><h1 id="Hexo-主题配置"><a href="#Hexo-主题配置" class="headerlink" title="Hexo 主题配置"></a>Hexo 主题配置</h1><h2 id="主题选择"><a href="#主题选择" class="headerlink" title="主题选择"></a>主题选择</h2><ul><li><p>网上有许多Jekyll-Theme免费模板，以下为主流样式站点可供选择</p><ul><li><a href="https://hexo.io/themes/" target="_blank" rel="noopener">Themes|Hexo</a></li><li><a href="https://jekyllthemes.io/" target="_blank" rel="noopener">Jekyll Themes &amp; Templates</a></li><li>……</li></ul><p>本站使用当前github上最热的一款<a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">NexT</a>主题（仓库<a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">hexo-theme-next</a>）</p><p>官方文档中有详细安装步骤，此处简单介绍配置过程。</p></li></ul><h2 id="下载主题"><a href="#下载主题" class="headerlink" title="下载主题"></a>下载主题</h2><ul><li><p>在cmd下，定位至Hexo站点目录下，并将主题克隆到themes的next文件夹下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd Hexo</span><br><span class="line">git clone https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure></li><li><p>随后可使用<code>git pull</code>快速更新主题</p></li></ul><h2 id="启用主题"><a href="#启用主题" class="headerlink" title="启用主题"></a>启用主题</h2><ul><li><p>hexo官方使用landscape主题，更换主题需要在站点配置文件<code>_config.yml</code>中配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br></pre></td></tr></table></figure></li><li><p>切换主题后，需要清除Hexo缓存，以解决渲染错误问题，并通过访问本地服务器验证是否更换</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure></li></ul><h2 id="个性化设置"><a href="#个性化设置" class="headerlink" title="个性化设置"></a>个性化设置</h2><p>见下篇=-=！懒的码了……</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文讲述在Github上通过GitHub Pages搭建个人博客过程。&lt;br&gt;
    
    </summary>
    
      <category term="Blog" scheme="http://meow0v0.github.io/categories/Blog/"/>
    
    
      <category term="Hexo" scheme="http://meow0v0.github.io/tags/Hexo/"/>
    
      <category term="Github" scheme="http://meow0v0.github.io/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://meow0v0.github.io/2018/04/06/hello-world/"/>
    <id>http://meow0v0.github.io/2018/04/06/hello-world/</id>
    <published>2018-04-05T19:32:06.349Z</published>
    <updated>2018-04-06T06:37:58.763Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
